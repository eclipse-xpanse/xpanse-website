"use strict";(self.webpackChunkxpanse_website=self.webpackChunkxpanse_website||[]).push([[1603],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),h=r,m=c["".concat(s,".").concat(h)]||c[h]||p[h]||a;return n?i.createElement(m,o(o({ref:t},u),{},{components:n})):i.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<a;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},2667:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=n(7462),r=(n(7294),n(3905));const a={},o="Authentication and Authorization",l={unversionedId:"authentication-authorization",id:"authentication-authorization",title:"Authentication and Authorization",description:"With security being at the heart of Xpanse project, all entry points to the application are completely protected.",source:"@site/docs/authentication-authorization.md",sourceDirName:".",slug:"/authentication-authorization",permalink:"/xpanse/docs/authentication-authorization",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Demo",permalink:"/xpanse/docs/FurtherReading/demos"},next:{title:"Credentials Concept",permalink:"/xpanse/docs/credentials-concept"}},s={},d=[{value:"OIDC",id:"oidc",level:2},{value:"OIDC Providers and its Configuration",id:"oidc-providers-and-its-configuration",level:3},{value:"Zitadel",id:"zitadel",level:2},{value:"Zitadel Provider Configuration",id:"zitadel-provider-configuration",level:3},{value:"Zitadel Consumer Configuration",id:"zitadel-consumer-configuration",level:3},{value:"End Users Configuration",id:"end-users-configuration",level:3},{value:"Admin Users",id:"admin-users",level:3},{value:"Role Based Access Control - RBAC",id:"role-based-access-control---rbac",level:2},{value:"Roles",id:"roles",level:3},{value:"Role Assignment",id:"role-assignment",level:3},{value:"Role Validation",id:"role-validation",level:3}],u={toc:d},c="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"authentication-and-authorization"},"Authentication and Authorization"),(0,r.kt)("p",null,"With security being at the heart of Xpanse project, all entry points to the application are completely protected."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"To allow seamless enablement of security, by default, the security layer is not enabled. This is useful for development\npurposes. For production purposes, the security must be enabled and how it can be done is explained in the next\nsections.")),(0,r.kt)("h2",{id:"oidc"},"OIDC"),(0,r.kt)("p",null,"Authentication and Authorization are implemented using OIDC (OpenID Connect). This helps us to outsource the security\nlayer to an external ",(0,r.kt)("inlineCode",{parentName:"p"},"Identity Provider")," and thereby not storing any user data within Xpanse."),(0,r.kt)("h3",{id:"oidc-providers-and-its-configuration"},"OIDC Providers and its Configuration"),(0,r.kt)("p",null,"Similar to other integrations provided in Xpanse, the runtime can be extended to be integrated with any Identity\nProvider that supports OIDC standards. It is not limited to any specific product."),(0,r.kt)("p",null,"Any OIDC provider cannot be used directly out of the box. It needs a variety of configurations on the provider. From\nXpanse project, we aim to provide 'Infrastructure as Code' which will automate all required configuration on the\nIdentity provider."),(0,r.kt)("p",null,"All Identity provider related configuration on consumers can only be obtained only after the OIDC provider is fully\nconfigured with the consumer detail"),(0,r.kt)("h2",{id:"zitadel"},"Zitadel"),(0,r.kt)("p",null,"As a default implementation, Xpanse runtime is integrated with ",(0,r.kt)("a",{parentName:"p",href:"https://zitadel.com/"},"Zitadel")," Identity Provider."),(0,r.kt)("p",null,"To enable Zitadel authentication layer, the runtime must be started with ",(0,r.kt)("inlineCode",{parentName:"p"},"zitadel")," profile."),(0,r.kt)("p",null,"More details can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eclipse-xpanse/xpanse#run-with-authorization"},"here"),"."),(0,r.kt)("h3",{id:"zitadel-provider-configuration"},"Zitadel Provider Configuration"),(0,r.kt)("p",null,"After starting the vanilla Zitadel application, all required configurations can be applied using the Terraform scripts\nprovided. All steps required for initial configuration is\navailable ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eclipse-xpanse/xpanse-iam/blob/main/zitadel/terraform/README.md"},"here"),"."),(0,r.kt)("h3",{id:"zitadel-consumer-configuration"},"Zitadel Consumer Configuration"),(0,r.kt)("p",null,"All generated configuration details can be obtained as\ndocumented ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eclipse-xpanse/xpanse-iam/blob/main/zitadel/terraform/README.md#get-consumer-details"},"here"),"."),(0,r.kt)("p",null,"Runtime can be then started using the consumer details as\ndocumented ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eclipse-xpanse/xpanse#run-with-authorization"},"here"),"."),(0,r.kt)("p",null,"UI can be then started using the consumer details as\ndocumented ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eclipse-xpanse/xpanse-ui#starting-local-development-server"},"here"),"."),(0,r.kt)("h3",{id:"end-users-configuration"},"End Users Configuration"),(0,r.kt)("p",null,"At the moment, it is only feasible to create user only via the Zitadel UI as we do not have SMTP available which is\nneeded for self-registration of users."),(0,r.kt)("h3",{id:"admin-users"},"Admin Users"),(0,r.kt)("p",null,"By default, Zitadel provides a root user using which other users can be created and also made other administrators. Only\nthese users can add other end-users on Zitadel."),(0,r.kt)("h2",{id:"role-based-access-control---rbac"},"Role Based Access Control - RBAC"),(0,r.kt)("p",null,"We use OIDC providers to also implement RBAC on Xpanse runtime API and also in UI."),(0,r.kt)("h3",{id:"roles"},"Roles"),(0,r.kt)("p",null,"To keep our initial role configuration simple, the following roles are considered"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"user")," - this is the role allocated to end user."),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"csp")," - this is the role allocated to cloud service provider users."),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"admin")," - this is the role allocated to administrators running Xpanse."),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Default Role")," - When no roles are assigned to a user, then every registered is by default assumed to have\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"user")," role.")),(0,r.kt)("h3",{id:"role-assignment"},"Role Assignment"),(0,r.kt)("p",null,"After the end users are registered/created on Zitadel, the administrator must assign roles to the user."),(0,r.kt)("p",null,"This option can be found on the UI under - users -> click on user -> Authorizations -> + New"),(0,r.kt)("h3",{id:"role-validation"},"Role Validation"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Each API method is configured to be allowed only for specific roles. ",(0,r.kt)("inlineCode",{parentName:"li"},"Spring Security")," fetches the user information\nfrom ",(0,r.kt)("inlineCode",{parentName:"li"},"Identity Provider")," and based on the roles allocated to the user, we decide if the user is allowed to access an\nAPI or not. If the user is not authorized to access, then API returns HTTP code ",(0,r.kt)("inlineCode",{parentName:"li"},"403"),"."),(0,r.kt)("li",{parentName:"ol"},"Xpanse UI fetches the user information from ",(0,r.kt)("inlineCode",{parentName:"li"},"Identity Provider")," and based on the roles allocated to the user, menu\noptions are displayed in the UI.")))}p.isMDXComponent=!0}}]);