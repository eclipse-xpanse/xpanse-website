"use strict";(self.webpackChunkosc_website=self.webpackChunkosc_website||[]).push([[203],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>k});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),u=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=u(e.components);return i.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(t),m=r,k=c["".concat(s,".").concat(m)]||c[m]||d[m]||a;return t?i.createElement(k,l(l({ref:n},p),{},{components:t})):i.createElement(k,l({ref:n},p))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<a;u++)l[u]=t[u];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},601:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var i=t(7462),r=(t(7294),t(3905));const a={sidebar_position:3},l="Configuration Language",o={unversionedId:"ocl",id:"ocl",title:"Configuration Language",description:"The Open Services Cloud Configuration Language allows you to describe your service and interaction with fundamentals",source:"@site/docs/ocl.md",sourceDirName:".",slug:"/ocl",permalink:"/xpanse/docs/ocl",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/xpanse/docs/architecture"},next:{title:"Runtime",permalink:"/xpanse/docs/runtime"}},s={},u=[{value:"Billing",id:"billing",level:3},{value:"Compute",id:"compute",level:3},{value:"VMs",id:"vms",level:4},{value:"Network",id:"network",level:3},{value:"VPC",id:"vpc",level:4},{value:"Subnets",id:"subnets",level:4},{value:"SecurityGroups",id:"securitygroups",level:4},{value:"SecurityRule",id:"securityrule",level:5},{value:"Storages",id:"storages",level:3},{value:"Observability &amp; Tracing",id:"observability--tracing",level:3},{value:"Logging",id:"logging",level:4},{value:"Tracing",id:"tracing",level:4},{value:"Metrics (Gauge, ...)",id:"metrics-gauge-",level:4},{value:"Identity Management",id:"identity-management",level:3},{value:"Baseline",id:"baseline",level:3},{value:"Example",id:"example",level:2},{value:"Terraform Provider",id:"terraform-provider",level:2}],p={toc:u},c="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuration-language"},"Configuration Language"),(0,r.kt)("p",null,"The Open Services Cloud Configuration Language allows you to describe your service and interaction with fundamentals\nservices (computing, network, billing, ...)."),(0,r.kt)("p",null,"The first part of the OCL service descriptor is basically service metadata:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," is the name of the service, used to identify the service in the CSP catalog, user console, etc"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"category")," is the overall category of the service. It's especially use to integrate the service in the right menu of\nthe user console."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"namespace")," is the location of the service. It could be in a CSP subdomain, in a region, and any kind of CSP\nclassification.")),(0,r.kt)("h3",{id:"billing"},"Billing"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"billing")," component defines the integration into cloud provider billing system."),(0,r.kt)("p",null,"You can configure the business model associated to the service:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"model")," defines the business model (",(0,r.kt)("inlineCode",{parentName:"li"},"flat"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"exponential"),", ...)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"period")," defines the rental period (",(0,r.kt)("inlineCode",{parentName:"li"},"daily"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"weekly"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"monthly"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"yearly"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"currency")," defines the billing currency (",(0,r.kt)("inlineCode",{parentName:"li"},"euro"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"usd"),", ...)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"fixedPrice")," is the fixed price during the period (the price applied one shot whatever is the service use)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"variablePrice")," is the price depending of item volume")),(0,r.kt)("h3",{id:"compute"},"Compute"),(0,r.kt)("h4",{id:"vms"},"VMs"),(0,r.kt)("p",null,"This is the list of VMs used by the service. Each VM has:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," - (Required) The name of the VM."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type")," - (Required) The VM type, like ",(0,r.kt)("inlineCode",{parentName:"li"},"t2.large")," for example."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"subnets")," - (Required) A list of ",(0,r.kt)("inlineCode",{parentName:"li"},"JsonPath")," of the ",(0,r.kt)("inlineCode",{parentName:"li"},"subnets"),". The subnet for main Nic must be in the first place."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"securityGroups")," - (Required) A list of ",(0,r.kt)("inlineCode",{parentName:"li"},"JsonPath")," of ",(0,r.kt)("inlineCode",{parentName:"li"},"securityGroups"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"storages")," - (Required) A list of ",(0,r.kt)("inlineCode",{parentName:"li"},"JsonPath")," of the ",(0,r.kt)("inlineCode",{parentName:"li"},"storages"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"publicly")," - (Required) The flag to indicate if the VM should be exposed on Internet (",(0,r.kt)("inlineCode",{parentName:"li"},"true"),") or only local (",(0,r.kt)("inlineCode",{parentName:"li"},"false"),").")),(0,r.kt)("h3",{id:"network"},"Network"),(0,r.kt)("h4",{id:"vpc"},"VPC"),(0,r.kt)("p",null,"This is the list of VPC defined in the service network. Each VPC has:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," - (Required) The name of VPC, used in other OCL elements"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cidr")," - (Required) The VPN IP address range.")),(0,r.kt)("h4",{id:"subnets"},"Subnets"),(0,r.kt)("p",null,"This is the list of subnet defined in the service network. Each subnet has:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," - (Required) The name of the subnet, used in other OCL elements."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"vpc")," - (Required) The ",(0,r.kt)("inlineCode",{parentName:"li"},"JsonPath")," of the VPC where the subnet is attached."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cidr")," - (Required) The subnet IP address range.")),(0,r.kt)("h4",{id:"securitygroups"},"SecurityGroups"),(0,r.kt)("p",null,"This is the list of securityGroup defined in the service network. Each securityGroup has:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," - (Required) The name of the securityGroup, used in other OCL elements."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rules")," - (Required) The list of securityGroup rule.")),(0,r.kt)("h5",{id:"securityrule"},"SecurityRule"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," - (Required) The name of the securityGroup rule, define in ",(0,r.kt)("inlineCode",{parentName:"li"},"securityGroups"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"priority")," - (Required) The priority of the securityGroup rule. The lower the priority number, the higher the priority of\nthe rule."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"protocol")," - (Required) Network protocol this rule applies to. Possible values include: ",(0,r.kt)("inlineCode",{parentName:"li"},"tcp"),",",(0,r.kt)("inlineCode",{parentName:"li"},"udp"),",",(0,r.kt)("inlineCode",{parentName:"li"},"icmp"),",",(0,r.kt)("inlineCode",{parentName:"li"},"*"),"(which\nmatches all)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cidr")," - (Required) The IP address range this rule applies to. The ",(0,r.kt)("inlineCode",{parentName:"li"},"*")," matches any IP."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"direction")," - (Required) The direction of the network traffic. Possible values include: ",(0,r.kt)("inlineCode",{parentName:"li"},"in"),",",(0,r.kt)("inlineCode",{parentName:"li"},"out"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ports")," - (Required) (Optional) Specifies the port value range, which supports single port (80), continuous port (\n1-30) and discontinuous port (22, 3389, 80) The valid port values is range form 1 to 65,535."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"action")," - (Required) Specifies whether network traffic is allowed or denied. Possible values include: ",(0,r.kt)("inlineCode",{parentName:"li"},"allow"),",",(0,r.kt)("inlineCode",{parentName:"li"},"deny"),".")),(0,r.kt)("h3",{id:"storages"},"Storages"),(0,r.kt)("h3",{id:"observability--tracing"},"Observability & Tracing"),(0,r.kt)("h4",{id:"logging"},"Logging"),(0,r.kt)("h4",{id:"tracing"},"Tracing"),(0,r.kt)("h4",{id:"metrics-gauge-"},"Metrics (Gauge, ...)"),(0,r.kt)("h3",{id:"identity-management"},"Identity Management"),(0,r.kt)("h3",{id:"baseline"},"Baseline"),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "my-service",\n  "category": "compute",\n  "namespace": "my-namespace",\n  "billing": {\n    "model": "flat",\n    "period": "monthly",\n    "currency": "EURO",\n    "fixedPrice": 20,\n    "variablePrice": 10\n  },\n  "compute": {\n    "vm": [\n      {\n        "name": "my-vm",\n        "type": "t2.large",\n        "image": "c7d4ff3e-a851-11ed-b9df-f329738732c0",\n        "subnets": [\n          "$.network.subnets[0]"\n        ],\n        "securityGroups": [\n          "$.network.securityGroups[0]"\n        ],\n        "storages": [\n          "$.storages[0]"\n        ],\n        "publicly": true\n      }\n    ]\n  },\n  "network": {\n    "vpc": [\n      {\n        "name": "my-vpc",\n        "cidr": "172.31.0.0/16"\n      },\n      {\n        "name": "my-another-vpc",\n        "cidr": "172.32.0.0/16"\n      }\n    ],\n    "subnets": [\n      {\n        "name": "my-subnet",\n        "vpc": "$.network.vpc[0]",\n        "cidr": "172.31.1.0/24"\n      }\n    ],\n    "securityGroups": [\n      {\n        "name": "my-sg",\n        "rules": [\n          {\n            "name": "my-app-msg",\n            "priority": 1,\n            "protocol": "TCP",\n            "cidr": "172.31.2.0/24",\n            "direction": "inbound",\n            "ports": "3389",\n            "action": "allow"\n          }\n        ]\n      }\n    ]\n  },\n  "storages": [\n    {\n      "name": "my-storage",\n      "type": "ssd",\n      "size": "80",\n      "sizeUnit": "GB"\n    }\n  ]\n}\n')),(0,r.kt)("h2",{id:"terraform-provider"},"Terraform Provider"),(0,r.kt)("p",null,"OCL is also available as Terraform Provider, supporting the same details as above."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hcl"},'resource "osc_service" "myservice" {\n  name      = "my-service"\n  category  = "compute"\n  namespace = "my-namespace"\n\n  billing {\n    model         = "flat"\n    period        = "monthly"\n    currency      = "euro"\n    fixedPrice    = 20\n    variablePrice = 10\n  }\n\n  compute {\n    vm {\n      name     = "my-vm"\n      type     = "t2.large"\n      platform = "linux-x64"\n      vpc      = "my-vpc"\n      subnet   = "my-subnet"\n      securityGroup = "my-sg"\n      storage  = "my-storage"\n      publicly = true\n    }\n  }\n\n  network {\n    vpc {\n      name   = "my-vpc"\n      cidr  = "172.31.0.0/16"\n    }\n\n    subnet {\n      name   = "my-subnet"\n      vpc    = "my-vpc"\n    }\n  }\n\n  storage {\n    name = "my-storage"\n    type = "ssd"\n    size = "80"\n    sizeUnit = "GB"\n  }\n}\n')))}d.isMDXComponent=!0}}]);