"use strict";(self.webpackChunkxpanse_website=self.webpackChunkxpanse_website||[]).push([[6433],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=u(n),c=i,g=h["".concat(l,".").concat(c)]||h[c]||p[c]||a;return n?r.createElement(g,o(o({ref:t},d),{},{components:n})):r.createElement(g,o({ref:t},d))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[h]="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},34774:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(87462),i=(n(67294),n(3905));const a={},o="Bug Handling Process",s={unversionedId:"Contribute/bug-handling-process",id:"Contribute/bug-handling-process",title:"Bug Handling Process",description:"Overview",source:"@site/docs/Contribute/bug-handling-process.md",sourceDirName:"Contribute",slug:"/Contribute/bug-handling-process",permalink:"/xpanse/docs/Contribute/bug-handling-process",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Planning",permalink:"/xpanse/docs/Contribute/planning"},next:{title:"Calendar",permalink:"/xpanse/docs/Contribute/calendar"}},l={},u=[{value:"Overview",id:"overview",level:2},{value:"How to Report a Bug?",id:"how-to-report-a-bug",level:2},{value:"Bug Triage",id:"bug-triage",level:2},{value:"When the Issue is in the Code Developed by the Project`",id:"when-the-issue-is-in-the-code-developed-by-the-project",level:3},{value:"When the Issue Originates from Dependencies",id:"when-the-issue-originates-from-dependencies",level:3},{value:"Detailed Workflow",id:"detailed-workflow",level:2},{value:"Bug Sources",id:"bug-sources",level:3},{value:"Acknowledgement and Bug Triage",id:"acknowledgement-and-bug-triage",level:3},{value:"Prioritizing and Fixing",id:"prioritizing-and-fixing",level:3},{value:"Releasing",id:"releasing",level:3}],d={toc:u},h="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(h,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"bug-handling-process"},"Bug Handling Process"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Xpanse is aiming to build a secure system from the foundation,\napplying the best industry practices in terms of development quality. However,\nas in every software projects, bugs do happen. This process explains how we\nhandle bugs."),(0,i.kt)("h2",{id:"how-to-report-a-bug"},"How to Report a Bug?"),(0,i.kt)("p",null,"If you think you have found a bug in Xpanse, please open an issue in GitHub and in the project that you think is the\nsource of the issue. Use the provided template:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"What is the action to reproduce the bug? (Steps to reproduce)"),(0,i.kt)("li",{parentName:"ul"},"What is the result you see? (Actual result)"),(0,i.kt)("li",{parentName:"ul"},"What is the result you expect? (Expected behaviour)"),(0,i.kt)("li",{parentName:"ul"},"Frequency? (always, sometimes, one-time issue)"),(0,i.kt)("li",{parentName:"ul"},"Tested version (Release or commit version, platform)"),(0,i.kt)("li",{parentName:"ul"},"Do you know any workaround of this issue? (link to workaround/mitigation steps etc)"),(0,i.kt)("li",{parentName:"ul"},"Do you have a fix for this issue?")),(0,i.kt)("p",null,"Developers review the reported issues and perform triage (see below). When a fix\nis available, the ticket is updated with the details of the solution."),(0,i.kt)("h2",{id:"bug-triage"},"Bug Triage"),(0,i.kt)("p",null,"The bug triage is a process where developers asses the bug and set its\nseverity and domain. At the end of this process the bug will:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Be classified as a security issue, normal bug, feature request, or be rejected\nif the feature is working as planned or could not be reproduced."),(0,i.kt)("li",{parentName:"ul"},"Have its severity set. Please refer to the documentation of severity levels\nbelow.")),(0,i.kt)("p",null,"If the bug is classified as a security vulnerability, please also refer to our security guidelines ",(0,i.kt)("a",{parentName:"p",href:"/xpanse/docs/Contribute/security"},"here"),"."),(0,i.kt)("p",null,"If the bug is confirmed as a bug, the developer will assign bug severity:\ncritical, major, minor or low."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Note:"))),(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Critical")," severity bugs make a feature unusable, cause a major data loss.\nThere is no workaround, or a complex one."),(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Normal")," severity bugs make a feature hard to use, but there is a workaround\n(including another feature to use instead of the desired one)."),(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Minor")," severity bugs cause a loss of non-critical feature (like missing or\nincorrect logging)."),(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Low")," severity bugs cause minor inconveniences (like a typo in the user\ninterface or in the documentation).")),(0,i.kt)("p",null,"The bug can originate in the software developed by the project, or from the dependencies we use from other sources. The\nprocess of handling a bug report will change\nbetween those two cases:"),(0,i.kt)("h3",{id:"when-the-issue-is-in-the-code-developed-by-the-project"},"When the Issue is in the Code Developed by the Project`"),(0,i.kt)("p",null,"In the case where the bug originates in the code directly maintained by the\nProject, the bug is handled directly in the bug tracker."),(0,i.kt)("h3",{id:"when-the-issue-originates-from-dependencies"},"When the Issue Originates from Dependencies"),(0,i.kt)("p",null,"If the issue was identified in dependencies code, we report an issue in\na way appropriate to that particular dependency project. We store the reference to their\nbug report in our bug tracker. Depending on the bug severity,\nwe might decide to develop and maintain a fix locally. However, we strongly\nprefer the dependency library maintainers to fix the issue first, and then get it with a regular dependency version\nupdate."),(0,i.kt)("p",null,"Please note also that we periodically update maintained dependencies, regardless of the bugs filled in our system. Our\ngoal is to update to the latest stable version of the project."),(0,i.kt)("h2",{id:"detailed-workflow"},"Detailed Workflow"),(0,i.kt)("h3",{id:"bug-sources"},"Bug Sources"),(0,i.kt)("p",null,"Bugs might be reported by different sources, including Project's own findings\n(like QA), partner findings or community. There might be\nalso different ways the Project team learns about the issue, including\nchats, discussion forums etc. Issues coming from different sources\nare centralized in the bug tracker, which also provides a unified\nidentification of all issues."),(0,i.kt)("h3",{id:"acknowledgement-and-bug-triage"},"Acknowledgement and Bug Triage"),(0,i.kt)("p",null,"After the bug is entered, a developer will perform triage. The process starts\nfrom acknowledging the issue and then consists of verifying all the information\nprovided by the bug reporter to reproduce the issue. The developer performing\ntriage might ask additional questions. Then they assign severity and domain to\nthe issue in the bug tracker. They also check which versions are affected and might\nmodify the severity level set by the reporter.\nAny project member, or the bug reporter, who disagrees with the assignment might\ncomment on the issue."),(0,i.kt)("p",null,"If there is a fix available from the reporter, the developer also verifies if\nthe fix is correct and matches the IP policy. If the fix is judged acceptable,\nthe process might skip to the Releasing step."),(0,i.kt)("p",null,"We aim at the first answer of the triage (either finishing triage, or additional\nquestions to the reporter) in three working days for critical bugs and seven days\nfor other bugs. In case of a critical bug, the person performing triage informs\nthe maintainers of the affected subsystem."),(0,i.kt)("h3",{id:"prioritizing-and-fixing"},"Prioritizing and Fixing"),(0,i.kt)("p",null,"Bugs with the severity attached enter the prioritization process. It includes a weekly\nmeeting when the team reviews bugs entered or modified during the last week: those\nduring the process of triage, and those with the triage finished. For the bugs with\ntriage finished, the team sets the priority and might assign it to a developer."),(0,i.kt)("p",null,"The bug fixes should follow the same contributions guidelines as any other\ncontribution. The best practice is to develop a fix for the bug in a separate\nbranch. Fixes for related bugs are possible in the same branch."),(0,i.kt)("h3",{id:"releasing"},"Releasing"),(0,i.kt)("p",null,"When a bug fix is available in a branch, the developer creates a merge request.\nWhen the change is accepted, it is merged in the main branch. The developer in\ncharge of the bug verifies with the release manager to which branches the change\nshould be backported."),(0,i.kt)("p",null,"If the bug comes from a dependent library, developers upstream the bug fix. If\nthe upstream is delayed, the Project might ship a local fix. However, we aim at\nupstreaming all fixes."),(0,i.kt)("p",null,"During the time of development of the patch and eventual upstream, the developer\nupdates the documentation (if appropriate), and adds a notification to the release\nnotes. Our release notes contain: links to bugs fixed in the release, links to CVEs\nfixed in the release (publicly known) and a list of CVEs fixed that are still under\nembargo."),(0,i.kt)("p",null,"If the bug is classified as critical, it might be decided to perform a separate\nbugfix release to fix the issue. Otherwise, the bug fix lands in the next bugfix\nrelease."))}p.isMDXComponent=!0}}]);