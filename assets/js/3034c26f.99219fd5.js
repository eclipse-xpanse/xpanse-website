"use strict";(self.webpackChunkosc_website=self.webpackChunkosc_website||[]).push([[185],{3905:(e,n,t)=>{t.d(n,{Zo:()=>_,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),i=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},_=function(e){var n=i(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,_=s(e,["components","mdxType","originalType","parentName"]),p=i(t),d=a,m=p["".concat(c,".").concat(d)]||p[d]||u[d]||o;return t?r.createElement(m,l(l({ref:n},_),{},{components:t})):r.createElement(m,l({ref:n},_))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:a,l[1]=s;for(var i=2;i<o;i++)l[i]=t[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4456:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:4},l="Runtime",s={unversionedId:"runtime",id:"runtime",title:"Runtime",description:"Open Services Cloud runtime is the running module. It packages and executes all together: OCL loader, orchestrator, plugins, REST API, ...",source:"@site/docs/runtime.md",sourceDirName:".",slug:"/runtime",permalink:"/osc/docs/runtime",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Configuration Language",permalink:"/osc/docs/ocl"},next:{title:"REST API",permalink:"/osc/docs/api"}},c={},i=[{value:"Build",id:"build",level:2},{value:"Launch",id:"launch",level:2},{value:"Exploded mode",id:"exploded-mode",level:3},{value:"Docker",id:"docker",level:3},{value:"Kubernetes",id:"kubernetes",level:3}],_={toc:i};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},_,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"runtime"},"Runtime"),(0,a.kt)("p",null,"Open Services Cloud runtime is the running module. It packages and executes all together: OCL loader, orchestrator, plugins, REST API, ..."),(0,a.kt)("h2",{id:"build"},"Build"),(0,a.kt)("p",null,"You can easily build OSC yourself."),(0,a.kt)("p",null,"As requirement, you need:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"a Java Developer Kit (JDK) installed, version 11 or newer. You can use ",(0,a.kt)("a",{parentName:"li",href:"https://openjdk.org/"},"openjdk")," or ",(0,a.kt)("a",{parentName:"li",href:"https://adoptium.net/"},"temurin")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://maven.apache.org/"},"Apache Maven 3.8.x or newer"))),(0,a.kt)("p",null,"You can clone the project locally on your machine with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ git clone https://github.com/huaweicloud/osc\n$ cd osc\n")),(0,a.kt)("p",null,"You can build the whole project with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ mvn clean install\n")),(0,a.kt)("p",null,"It builds the whole project, including the runtime (located in the ",(0,a.kt)("inlineCode",{parentName:"p"},"runtime/target/runtime")," folder).\nThis runtime is the default one without any plugin."),(0,a.kt)("p",null,"We provide profiles dedicated to build prepackaged runtimes (including specific plugins):"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Huawei Cloud runtime:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ mvn clean install -Phuaweicloud\n")),(0,a.kt)("p",null,"You can build only the runtime (once you built completely the project):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ mvn clean install -Phuaweicloud -pl runtime\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Openstack runtime")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ mvn clean install -Popenstack\n")),(0,a.kt)("p",null,"You can build only the runtime (once you built completely the project):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ mvn clean install -Popenstack -pl runtime\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Kubernetes runtime")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ mvn clean install -Pk8s\n")),(0,a.kt)("p",null,"You can build only the runtime (once you built completely the project):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ mvn clean install -Pk8s -pl runtime\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"NOTE")),": The ",(0,a.kt)("inlineCode",{parentName:"p"},"huaweicloud"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"openstack"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"k8s")," profiles build the docker images. You can skip docker images creation by adding ",(0,a.kt)("inlineCode",{parentName:"p"},"-Ddocker.skip=true")," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"mvn")," command."),(0,a.kt)("h2",{id:"launch"},"Launch"),(0,a.kt)("h3",{id:"exploded-mode"},"Exploded mode"),(0,a.kt)("p",null,"The runtime is built and available in ",(0,a.kt)("inlineCode",{parentName:"p"},"runtime/target/runtime")," folder by default, where you can directly launch the runtime."),(0,a.kt)("p",null,"To launch the runtime, go into the exploded folder and launch minho-boot jar:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ cd runtime/target/runtime\n$ java -jar minho-boot-1.0-SNAPSHOT.jar\n")),(0,a.kt)("p",null,"You can see the log messages:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"...\nJan 02, 2023 6:48:31 AM org.apache.karaf.minho.boot.service.ServiceRegistry add\nINFO: Adding minho-rest-service service (1000)\nJan 02, 2023 6:48:31 AM org.apache.karaf.minho.rest.jersey.JerseyRestService onRegister\nINFO: Starting minho-rest-service\nJan 02, 2023 6:48:31 AM org.apache.karaf.minho.rest.jersey.JerseyRestService onRegister\nINFO:   path: /osc/*\nJan 02, 2023 6:48:31 AM org.apache.karaf.minho.rest.jersey.JerseyRestService onRegister\nINFO:   packages: org.eclipse.osc.services.api\nJan 02, 2023 6:48:31 AM org.apache.karaf.minho.web.jetty.JettyWebContainerService addServlet\nINFO: Adding servlet java.lang.Class with context /osc/*\nJan 02, 2023 6:48:31 AM org.apache.karaf.minho.boot.service.ServiceRegistry add\nINFO: Adding minho-banner-service service (2147483647)\nJan 02, 2023 6:48:31 AM org.apache.karaf.minho.banner.WelcomeBannerService onRegister\nINFO: \n  ___                     ____                  _                  ____ _                 _\n / _ \\ _ __   ___ _ __   / ___|  ___ _ ____   _(_) ___ ___  ___   / ___| | ___  _   _  __| |\n| | | | '_ \\ / _ \\ '_ \\  \\___ \\ / _ \\ '__\\ \\ / / |/ __/ _ \\/ __| | |   | |/ _ \\| | | |/ _` |\n| |_| | |_) |  __/ | | |  ___) |  __/ |   \\ V /| | (_|  __/\\__ \\ | |___| | (_) | |_| | (_| |\n \\___/| .__/ \\___|_| |_| |____/ \\___|_|    \\_/ |_|\\___\\___||___/  \\____|_|\\___/ \\__,_|\\__,_|\n      |_|\n\n        Open Services Cloud 1.0.0-SNAPSHOT (2022)\n\nJan 02, 2023 6:48:31 AM org.apache.karaf.minho.boot.service.ServiceRegistry lambda$start$2\nINFO: Starting services\nJan 02, 2023 6:48:31 AM org.apache.karaf.minho.boot.service.LifeCycleService start\nINFO: Starting lifecycle service\nJan 02, 2023 6:48:31 AM org.eclipse.jetty.server.Server doStart\nINFO: jetty-11.0.12; built: 2022-09-14T02:38:00.723Z; git: d5b8c29485f5f56a14be5f20c2ccce81b93c5555; jvm 11.0.12+8-LTS-237\nJan 02, 2023 6:48:31 AM org.eclipse.jetty.server.session.DefaultSessionIdManager doStart\nINFO: Session workerName=node0\nJan 02, 2023 6:48:31 AM org.glassfish.jersey.server.wadl.WadlFeature configure\nWARNING: JAXBContext implementation could not be found. WADL feature is disabled.\nJan 02, 2023 6:48:31 AM org.eclipse.jetty.server.handler.ContextHandler doStart\nINFO: Started o.e.j.s.ServletContextHandler@108531c2{/,null,AVAILABLE}\nJan 02, 2023 6:48:31 AM org.eclipse.jetty.server.AbstractConnector doStart\nINFO: Started ServerConnector@9cb8225{HTTP/1.1, (http/1.1)}{0.0.0.0:8080}\nJan 02, 2023 6:48:31 AM org.eclipse.jetty.server.Server doStart\nINFO: Started Server@68f4865{STARTING}[11.0.12,sto=0] @846ms\nJan 02, 2023 6:48:31 AM org.eclipse.osc.orchestrator.OrchestratorService lambda$onRegister$2\nINFO: Loading OSC orchestrator plugins\n")),(0,a.kt)("p",null,"The OSC REST API is now available. You can check the status of the runtime by calling the health endpoint on the REST API:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ curl -XGET http://localhost:8080/osc/health\nready\n")),(0,a.kt)("h3",{id:"docker"},"Docker"),(0,a.kt)("p",null,"By default, the ",(0,a.kt)("inlineCode",{parentName:"p"},"huaweicloud"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"openstack"),", and  ",(0,a.kt)("inlineCode",{parentName:"p"},"k8s")," profiles build corresponding docker image."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"NOTE")),": you can skip docker image creation by adding ",(0,a.kt)("inlineCode",{parentName:"p"},"-Ddocker.skip=true")," argument to the ",(0,a.kt)("inlineCode",{parentName:"p"},"mvn")," command."),(0,a.kt)("p",null,"You can see the docker images created:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ docker images|grep osc\nosc/osc-k8s                     1.0.0-SNAPSHOT   4b716096304b   15 seconds ago   293MB\nosc/osc-k8s                     latest           4b716096304b   15 seconds ago   293MB\nosc/osc-openstack               1.0.0-SNAPSHOT   ffc69547c43f   27 seconds ago   263MB\nosc/osc-openstack               latest           ffc69547c43f   27 seconds ago   263MB\nosc/osc-huaweicloud             1.0.0-SNAPSHOT   d1a6bb77226c   42 seconds ago   264MB\nosc/osc-huaweicloud             latest           d1a6bb77226c   42 seconds ago   264MB\n")),(0,a.kt)("p",null,"You can run a docker container with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ docker run -d --name my-osc -p 8080:8080 osc/osc-k8s\n$ docker logs my-osc\n...\nJan 02, 2023 5:54:38 AM org.apache.karaf.minho.boot.service.ServiceRegistry add\nINFO: Adding minho-banner-service service (2147483647)\nJan 02, 2023 5:54:38 AM org.apache.karaf.minho.banner.WelcomeBannerService onRegister\nINFO: \n  ___                     ____                  _                  ____ _                 _\n / _ \\ _ __   ___ _ __   / ___|  ___ _ ____   _(_) ___ ___  ___   / ___| | ___  _   _  __| |\n| | | | '_ \\ / _ \\ '_ \\  \\___ \\ / _ \\ '__\\ \\ / / |/ __/ _ \\/ __| | |   | |/ _ \\| | | |/ _` |\n| |_| | |_) |  __/ | | |  ___) |  __/ |   \\ V /| | (_|  __/\\__ \\ | |___| | (_) | |_| | (_| |\n \\___/| .__/ \\___|_| |_| |____/ \\___|_|    \\_/ |_|\\___\\___||___/  \\____|_|\\___/ \\__,_|\\__,_|\n      |_|\n\n        Open Services Cloud 1.0.0-SNAPSHOT (2022)\n\nJan 02, 2023 5:54:38 AM org.apache.karaf.minho.boot.service.ServiceRegistry lambda$start$2\nINFO: Starting services\nJan 02, 2023 5:54:38 AM org.apache.karaf.minho.boot.service.LifeCycleService start\nINFO: Starting lifecycle service\nJan 02, 2023 5:54:38 AM org.eclipse.jetty.server.Server doStart\nINFO: jetty-11.0.12; built: 2022-09-14T02:38:00.723Z; git: d5b8c29485f5f56a14be5f20c2ccce81b93c5555; jvm 11.0.17+8\nJan 02, 2023 5:54:38 AM org.eclipse.jetty.server.session.DefaultSessionIdManager doStart\nINFO: Session workerName=node0\nJan 02, 2023 5:54:38 AM org.glassfish.jersey.server.wadl.WadlFeature configure\nWARNING: JAXBContext implementation could not be found. WADL feature is disabled.\nJan 02, 2023 5:54:38 AM org.eclipse.jetty.server.handler.ContextHandler doStart\nINFO: Started o.e.j.s.ServletContextHandler@703feacd{/,null,AVAILABLE}\nJan 02, 2023 5:54:38 AM org.eclipse.jetty.server.AbstractConnector doStart\nINFO: Started ServerConnector@16a0ee18{HTTP/1.1, (http/1.1)}{0.0.0.0:8080}\nJan 02, 2023 5:54:38 AM org.eclipse.jetty.server.Server doStart\nINFO: Started Server@5032714f{STARTING}[11.0.12,sto=0] @1007ms\nJan 02, 2023 5:54:38 AM org.eclipse.osc.orchestrator.OrchestratorService lambda$onRegister$2\nINFO: Loading OSC orchestrator plugins\n")),(0,a.kt)("p",null,"The OSC REST API is now available. You can check the status of the runtime by calling the health endpoint on the REST API:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ curl -XGET http://localhost:8080/osc/health\nready\n")),(0,a.kt)("h3",{id:"kubernetes"},"Kubernetes"),(0,a.kt)("p",null,"OSC provides all Kubernetes manifest files in the ",(0,a.kt)("inlineCode",{parentName:"p"},"runtime/src/main/kubernetes")," folder, allowing you to deploy all resources on your Kubernetes cluster."),(0,a.kt)("p",null,"As example, you can deploy on local ",(0,a.kt)("inlineCode",{parentName:"p"},"minikube")," instance. First, start your ",(0,a.kt)("inlineCode",{parentName:"p"},"minikube")," instance:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ minikube start\n$ eval $(minikube -p minikube docker-env)\n")),(0,a.kt)("p",null,"First, you create the ",(0,a.kt)("inlineCode",{parentName:"p"},"osc")," namespace in Kubernetes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ kubectl apply -f runtime/src/main/kubernetes/org.eclipse.osc.namespace.yaml\nnamespace/osc created\n")),(0,a.kt)("p",null,"Then, you create the ",(0,a.kt)("inlineCode",{parentName:"p"},"osc-config")," configmap in Kubernetes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ kubectl apply -f runtime/src/main/kubernetes/org.eclipse.osc.configmap.yaml \nconfigmap/osc-config created\n")),(0,a.kt)("p",null,"You can now create the OSC runtime deployment in Kubernetes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ kubectl apply -f runtime/src/main/kubernetes/org.eclipse.osc.deployment.k8s.yaml \ndeployment.apps/osc created\n")),(0,a.kt)("p",null,"You can check the status of the deployment:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get deployments -n osc\nNAME   READY   UP-TO-DATE   AVAILABLE   AGE\nosc    1/1     1            1           20s\n")),(0,a.kt)("p",null,"and the associated pod running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get pods -n osc\nNAME                   READY   STATUS    RESTARTS   AGE\nosc-8699fd7547-vj44p   1/1     Running   0          42s\n")),(0,a.kt)("p",null,"We can see the logs of the running pod:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ kubectl logs osc-8699fd7547-vj44p -n osc\n...\nJan 02, 2023 6:26:37 AM org.apache.karaf.minho.banner.WelcomeBannerService onRegister\nINFO: \n  ___                     ____                  _                  ____ _                 _\n / _ \\ _ __   ___ _ __   / ___|  ___ _ ____   _(_) ___ ___  ___   / ___| | ___  _   _  __| |\n| | | | '_ \\ / _ \\ '_ \\  \\___ \\ / _ \\ '__\\ \\ / / |/ __/ _ \\/ __| | |   | |/ _ \\| | | |/ _` |\n| |_| | |_) |  __/ | | |  ___) |  __/ |   \\ V /| | (_|  __/\\__ \\ | |___| | (_) | |_| | (_| |\n \\___/| .__/ \\___|_| |_| |____/ \\___|_|    \\_/ |_|\\___\\___||___/  \\____|_|\\___/ \\__,_|\\__,_|\n      |_|\n\n        Open Services Cloud 1.0.0-SNAPSHOT (2022)\n\nJan 02, 2023 6:26:37 AM org.apache.karaf.minho.boot.service.ServiceRegistry lambda$start$2\nINFO: Starting services\nJan 02, 2023 6:26:37 AM org.apache.karaf.minho.boot.service.LifeCycleService start\nINFO: Starting lifecycle service\nJan 02, 2023 6:26:37 AM org.eclipse.jetty.server.Server doStart\nINFO: jetty-11.0.12; built: 2022-09-14T02:38:00.723Z; git: d5b8c29485f5f56a14be5f20c2ccce81b93c5555; jvm 11.0.17+8\nJan 02, 2023 6:26:37 AM org.eclipse.jetty.server.session.DefaultSessionIdManager doStart\nINFO: Session workerName=node0\nJan 02, 2023 6:26:37 AM org.glassfish.jersey.server.wadl.WadlFeature configure\nWARNING: JAXBContext implementation could not be found. WADL feature is disabled.\nJan 02, 2023 6:26:37 AM org.eclipse.jetty.server.handler.ContextHandler doStart\nINFO: Started o.e.j.s.ServletContextHandler@703feacd{/,null,AVAILABLE}\nJan 02, 2023 6:26:37 AM org.eclipse.jetty.server.AbstractConnector doStart\nINFO: Started ServerConnector@16a0ee18{HTTP/1.1, (http/1.1)}{0.0.0.0:8080}\nJan 02, 2023 6:26:37 AM org.eclipse.jetty.server.Server doStart\nINFO: Started Server@5032714f{STARTING}[11.0.12,sto=0] @858ms\nJan 02, 2023 6:26:37 AM org.eclipse.osc.orchestrator.OrchestratorService lambda$onRegister$2\nINFO: Loading OSC orchestrator plugins\n")),(0,a.kt)("p",null,"We can now deploy the service exposing the port 8080 of the OSC runtime:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ kubectl apply -f runtime/src/main/kubernetes/org.eclipse.osc.service.yaml \nservice/osc created\n")),(0,a.kt)("p",null,"and check that the port is currently bound on the NodePort:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get services -n osc\nNAME   TYPE       CLUSTER-IP    EXTERNAL-IP   PORT(S)          AGE\nosc    NodePort   10.97.81.86   <none>        8080:32228/TCP   13s\n")),(0,a.kt)("p",null,"We can now access the health endpoint of the OSC REST API:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ minikube service list -n osc\n|-----------|------|-------------|---------------------------|\n| NAMESPACE | NAME | TARGET PORT |            URL            |\n|-----------|------|-------------|---------------------------|\n| osc       | osc  |        8080 | http://192.168.49.2:32228 |\n|-----------|------|-------------|---------------------------|\n")),(0,a.kt)("p",null,"You can now point test the health endpoint:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ curl -XGET http://192.168.49.2:32228/osc/health\nready\n")),(0,a.kt)("p",null,"OSC is now ready on your Kubernetes cluster."))}p.isMDXComponent=!0}}]);