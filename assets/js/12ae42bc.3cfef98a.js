"use strict";(self.webpackChunkxpanse_website=self.webpackChunkxpanse_website||[]).push([[6671],{7127:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"service-changes","title":"Service Changes","description":"A successfully deployed service can be modified at different levels. Below the options supported by xpanse.","source":"@site/docs/service-changes.mdx","sourceDirName":".","slug":"/service-changes","permalink":"/xpanse/docs/service-changes","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Runtime","permalink":"/xpanse/docs/runtime"},"next":{"title":"Service Configuration","permalink":"/xpanse/docs/service-configuration"}}');var i=s(4848),o=s(8453);const r={sidebar_position:8},a="Service Changes",c={},l=[];function d(e){const t={h1:"h1",header:"header",li:"li",ol:"ol",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"service-changes",children:"Service Changes"})}),"\n",(0,i.jsx)(t.p,{children:"A successfully deployed service can be modified at different levels. Below the options supported by xpanse."}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Modify Parameters - This option will allow user to change the service parameters that were used to deploy the service. This may or may not recreate the service based on how the deployment scripts are implemented and APIs supported by the CSP."}),"\n",(0,i.jsx)(t.li,{children:"Upscale/Downscale - This option will allow to change the flavor of the deployed service. This again may or may not recreate the service depending on how the deployment scripts are implemented and APIs supported by the CSP.\nFor example, if a new flavor needs a different VM size, some CSPs allow updating the existing VM size but some don't. Depending on such capabilities, the flavor change can be with or without service/data loss."}),"\n",(0,i.jsx)(t.li,{children:"Destroy - This option can be used to delete the service. It will delete all resources used by a service."}),"\n",(0,i.jsx)(t.li,{children:"Start/Stop/Restart - This option can be used to start/stop/restart the service. Currently, this option controls only virtual machines that are used in the service."}),"\n",(0,i.jsx)(t.li,{children:"Migrate - This option is used to migrate an existing service to another CSP."}),"\n",(0,i.jsx)(t.li,{children:"Lock/Unlock - This option can be used for locking the services from accidental deletion or modifications."}),"\n",(0,i.jsx)(t.li,{children:"Update service configuration parameters."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>a});var n=s(6540);const i={},o=n.createContext(i);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);