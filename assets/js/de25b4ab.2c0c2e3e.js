"use strict";(self.webpackChunkxpanse_website=self.webpackChunkxpanse_website||[]).push([[8506],{5512:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"database-schema-evolution","title":"Database Schema Evolution","description":"xpanse uses  framework to manage the database schema evolution of xpanse.","source":"@site/docs/database-schema-evolution.mdx","sourceDirName":".","slug":"/database-schema-evolution","permalink":"/xpanse/docs/database-schema-evolution","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Caching","permalink":"/xpanse/docs/caching"},"next":{"title":"Database","permalink":"/xpanse/docs/database"}}');var t=s(4848),i=s(8453),l=s(2585);const r={sidebar_position:6},o="Database Schema Evolution",h={},d=[{value:"Use of hdm2ddl library",id:"use-of-hdm2ddl-library",level:2},{value:"Release preparation",id:"release-preparation",level:2},{value:"Prepare Full Release Snapshot",id:"prepare-full-release-snapshot",level:3},{value:"MySql",id:"mysql",level:3},{value:"H2",id:"h2",level:3},{value:"Prepare upgrade to a release",id:"prepare-upgrade-to-a-release",level:3},{value:"MySql",id:"mysql-1",level:4},{value:"H2",id:"h2-1",level:4},{value:"Merging Change Log Files",id:"merging-change-log-files",level:2},{value:"Installing or Upgrading Database",id:"installing-or-upgrading-database",level:2},{value:"Design Decisions",id:"design-decisions",level:2},{value:"Known Issues",id:"known-issues",level:2}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"database-schema-evolution",children:"Database Schema Evolution"})}),"\n","\n",(0,t.jsxs)(n.p,{children:["xpanse uses ",(0,t.jsx)(l.A,{name:"Liquibase",url:"https://www.liquibase.com/"})," framework to manage the database schema evolution of xpanse."]}),"\n",(0,t.jsx)(n.h2,{id:"use-of-hdm2ddl-library",children:"Use of hdm2ddl library"}),"\n",(0,t.jsxs)(n.p,{children:["Spring Boot uses Hibernate framework's ",(0,t.jsx)(n.strong,{children:"hdm2ddl"})," which does the following"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Automatically generate DDL statements based on Entity classes available in the classpath."}),"\n",(0,t.jsx)(n.li,{children:"Execute DDL statements automatically at the server start."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This feature is used in xpanse by default for development purposes and\nalso additionally to prepare a database with all necessary database objects automatically and\nthen use it for generating Liquibase SQL change scripts for the respective release."}),"\n",(0,t.jsx)(n.admonition,{title:"hdm2ddl for schema evolution process",type:"tip",children:(0,t.jsx)(n.p,{children:"We use hdm2ddl for schema evolution in order to simplify the process of generating SQL scripts.\nThe developer need not write SQL scripts. Instead, we let hdm2ddl to generate the scripts and prepare the release preparation database and\nthen use Liquibase's feature to auto generate DDL SQL statements based on the database structure."})}),"\n",(0,t.jsxs)(n.admonition,{title:"Manual Process",type:"danger",children:[(0,t.jsx)(n.p,{children:"The schema generation process isn't fully automated to ensure the changes are verified by the developer before the release is done."}),(0,t.jsx)(n.p,{children:"Even though we use Hibernate and Liquibase to generate changes, the developer must still validate the changes generated.\nThis is also the recommended best practice from Liquibase."})]}),"\n",(0,t.jsx)(n.h2,{id:"release-preparation",children:"Release preparation"}),"\n",(0,t.jsxs)(n.p,{children:["When a xpanse release is planned, the developer must prepare the repository with the necessary change scripts using the steps below.\nThe scripts must be pushed and merged to the ",(0,t.jsx)(n.strong,{children:"main"})," branch, and only then the release job must be executed. s"]}),"\n",(0,t.jsx)(n.p,{children:"There are always two sets of changes to be prepared for each release of xpanse."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"**Full Release Change Log\u2014**This is used when the xpanse release will be installed on a fresh and empty database."}),"\n",(0,t.jsx)(n.li,{children:"**Update change log\u2014**This contains only the difference between the new release and the previous releases."}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"H2 database scripts included",type:"info",children:(0,t.jsx)(n.p,{children:"Even though H2 database is used for development purposes, we also deliver SQL scripts for it just for completeness."})}),"\n",(0,t.jsx)(n.h3,{id:"prepare-full-release-snapshot",children:"Prepare Full Release Snapshot"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"full-release-snapshot-prepare",src:s(6740).A+"",width:"1081",height:"502"})}),"\n",(0,t.jsx)(n.h3,{id:"mysql",children:"MySql"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Clone the forked xpanse repository. Ensure the fork is fully in sync with the upstream."}),"\n",(0,t.jsxs)(n.li,{children:["Checkout a feature branch from ",(0,t.jsx)(n.code,{children:"main"})," branch."]}),"\n",(0,t.jsx)(n.li,{children:"Start a new MySql database container."}),"\n",(0,t.jsxs)(n.li,{children:["Start xpanse with ",(0,t.jsx)(n.code,{children:"mysql"})," profile. Let hbm2ddl create all necessary database objects."]}),"\n",(0,t.jsx)(n.li,{children:"Run Liquibase's maven plugin to generate the full release snapshot of the database schema."}),"\n",(0,t.jsx)(n.li,{children:"Rename the generated file name."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# Start MySql Container\ndocker run --name mysql-db -p 3306:3306 -e MYSQL_PASSWORD=Xpanse@2023 -e MYSQL_ROOT_PASSWORD=Xpanse@2023 -e MYSQL_DATABASE=xpanse -e MYSQL_USER=xpanse -d mysql:latest\n\n# Start Application with mysql spring profile\n\n# Run Liquibase maven plugin\ncd modules/database\nmvn liquibase:generateChangeLog -Dliquibase.properties.file=src/main/resources/liquibase/liquibase.mysql.properties\n\n# Rename the generated src/main/resources/liquibase/full/mysql/xpanse-REPLACE_NEW_RELEASE-full.mysql.sql file name.\n# Replace REPLACE_NEW_RELEASE value in the file name with the next planned release value.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"h2",children:"H2"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Clone the forked xpanse repository. Ensure the fork is fully in sync with the upstream."}),"\n",(0,t.jsxs)(n.li,{children:["Checkout a feature branch from ",(0,t.jsx)(n.code,{children:"main"})," branch."]}),"\n",(0,t.jsx)(n.li,{children:"Delete existing H2 DB files from your local file system."}),"\n",(0,t.jsx)(n.li,{children:"Start xpanse with default profiles that enable H2 database. Let hbm2ddl create all necessary database objects."}),"\n",(0,t.jsx)(n.li,{children:"Stop the application. Otherwise, Liquibase can't connect concurrently to the H2 database files while the application is also running."}),"\n",(0,t.jsx)(n.li,{children:"Run Liquibase's maven plugin to generate the full release snapshot of the database schema."}),"\n",(0,t.jsx)(n.li,{children:"Rename the generated file name."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# Start Application with default profiles.\n\n# Run Liquibase maven plugin\ncd modules/database\nmvn liquibase:generateChangeLog -Dliquibase.properties.file=src/main/resources/liquibase/liquibase.h2.properties\n\n# Rename the generated src/main/resources/liquibase/full/h2/xpanse-REPLACE_NEW_RELEASE-full.h2.sql file name.\n# Replace REPLACE_NEW_RELEASE value in the file name with the next planned release value.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"prepare-upgrade-to-a-release",children:"Prepare upgrade to a release"}),"\n",(0,t.jsx)(n.p,{children:"This step is necessary to generate the changes necessary to upgrade a database running on a previous version of the schema\nto the new version of the schema."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"upgrade-between-release-prepare",src:s(9262).A+"",width:"2110",height:"825"})}),"\n",(0,t.jsx)(n.h4,{id:"mysql-1",children:"MySql"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Step 1 -"})," Prepare the last released DB Schema. This represents the 'is' state of the schema."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Clone the xpanse upstream repository and checkout GIT ",(0,t.jsx)(n.code,{children:"tag"})," of the previous released version."]}),"\n",(0,t.jsx)(n.li,{children:"Start a new MySql database container with port"}),"\n",(0,t.jsxs)(n.li,{children:["Start xpanse with ",(0,t.jsx)(n.code,{children:"mysql"})," profile. Let Hibernate create all necessary database objects."]}),"\n",(0,t.jsx)(n.li,{children:"Stop the application."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# Clone the upstream repository and checkout the tag.\n# Forked repositories will not work.\ngit clone https://github.com/eclipse-xpanse/xpanse.git\ngit checkout $vX.X.X\n\n# Start MySql Container\ncd modules/database/src/main/resources/liquibase/\ndocker run --name mysql-db-current -p 3306:3306 -e MYSQL_PASSWORD=Xpanse@2023 -e MYSQL_ROOT_PASSWORD=Xpanse@2023 -e MYSQL_DATABASE=xpanse -e MYSQL_USER=xpanse -v ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro -d mysql:latest\n\n# Start Application with mysql spring profile\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Step 2 -"})," Prepare the Reference DB Schema. This represents the 'to-be' state of the schema."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Clone the forked xpanse repository. Ensure the fork is fully in sync with the upstream."}),"\n",(0,t.jsxs)(n.li,{children:["Checkout a feature branch from the ",(0,t.jsx)(n.code,{children:"main"})," branch."]}),"\n",(0,t.jsx)(n.li,{children:"Start a new MySql database container with another name and port."}),"\n",(0,t.jsxs)(n.li,{children:["Start xpanse with ",(0,t.jsx)(n.code,{children:"mysql"})," profile and use the new database. Let Hibernate create all necessary database objects."]}),"\n",(0,t.jsx)(n.li,{children:"Stop the application."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# Start MySql Container from the forked repository and database folder\ncd modules/database/src/main/resources/liquibase/\ndocker run --name mysql-db-latest -p 3307:3306 -e MYSQL_PASSWORD=Xpanse@2023 -e MYSQL_ROOT_PASSWORD=Xpanse@2023 -e MYSQL_DATABASE=xpanse -e MYSQL_USER=xpanse -v ./init.sql:/docker-entrypoint-initdb.d/init.sql -d mysql:latest\n\n# update the application.mysql.properties file -\nspring.datasource.url=jdbc:mysql://localhost:3307/xpanse\nspring.activiti.datasource.jdbcUrl=jdbc:mysql://localhost:3307/activiti\n\n# Start Application with mysql spring profile\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Step 3 -"})," Use Liquibase to compare these two databases and generate the difference change log."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Run the maven plugin command with the goal specified below."}),"\n",(0,t.jsx)(n.li,{children:"Verify the changes generated by Liquibase."}),"\n",(0,t.jsx)(n.li,{children:"Rename the file with correct release numbers."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# Run Liquibase maven plugin\ncd modules/database\nmvn liquibase:diff -Dliquibase.properties.file=src/main/resources/liquibase/liquibase.mysql.properties\n\n# Rename the generated xpanse-upgrade-REPLACE_OLD_RELEASE-to-REPLACE_NEW_RELEASE.mysql.sql file name.\n# Replace REPLACE_NEW_RELEASE value in the file name with the next planned release value.\n# Replace REPLACE_OLD_RELEASE value in the file name with the previous released version.\n"})}),"\n",(0,t.jsx)(n.h4,{id:"h2-1",children:"H2"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Step 1 -"})," Prepare the last released DB Schema. This represents the 'is' state of the schema."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Clone the xpanse upstream repository and checkout GIT ",(0,t.jsx)(n.code,{children:"tag"})," of the previous released version."]}),"\n",(0,t.jsx)(n.li,{children:"Delete all existing H2 database files."}),"\n",(0,t.jsx)(n.li,{children:"Start xpanse with default profiles. Let Hibernate create all necessary database objects."}),"\n",(0,t.jsx)(n.li,{children:"Stop the application."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# checkout git tag\nspring.datasource.url=jdbc:h2:file:./xpanse-new;DB_CLOSE_ON_EXIT=FALSE\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Step 2 -"})," Prepare the Reference DB Schema. This represents the 'to-be' state of the schema."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Use the same cloned xpanse repository from step 1."}),"\n",(0,t.jsxs)(n.li,{children:["Checkout a feature branch from ",(0,t.jsx)(n.code,{children:"main"})," branch."]}),"\n",(0,t.jsx)(n.li,{children:"Update spring.datasource.url to use another unique database file."}),"\n",(0,t.jsx)(n.li,{children:"Start xpanse with default profiles. Let Hibernate create all necessary database objects."}),"\n",(0,t.jsx)(n.li,{children:"Stop the application."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# update the application.properties file -\nspring.datasource.url=jdbc:h2:file:./xpanse-new;DB_CLOSE_ON_EXIT=FALSE\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Step 3 -"})," Use Liquibase to compare these two databases and generate the difference change log."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Run the maven plugin."}),"\n",(0,t.jsx)(n.li,{children:"Verify the changes generated by Liquibase."}),"\n",(0,t.jsx)(n.li,{children:"Rename the file with correct release numbers."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# Run Liquibase maven plugin\ncd modules/database\nmvn liquibase:diff -Dliquibase.properties.file=src/main/resources/liquibase/liquibase.h2.properties\n\n# Rename the generated xpanse-upgrade-REPLACE_OLD_RELEASE-to-REPLACE_NEW_RELEASE.h2.sql file name.\n# Replace REPLACE_NEW_RELEASE value in the file name with the next planned release value.\n# Replace REPLACE_OLD_RELEASE value in the file name with the previous released version.\n"})}),"\n",(0,t.jsxs)(n.admonition,{title:"same process for generating upgrade from any release to new release",type:"important",children:[(0,t.jsx)(n.p,{children:"The steps mentioned above aren't only valid for upgrading just previous release to new release.\nSame steps can be used to upgrade from any of the previous releases to new release."}),(0,t.jsx)(n.p,{children:"Just the tag to be checked out must be changed based on the requirement."})]}),"\n",(0,t.jsx)(n.h2,{id:"merging-change-log-files",children:"Merging Change Log Files"}),"\n",(0,t.jsx)(n.p,{children:"Once the change log is generated and verified, a PR must be opened to merge these files into the main branch.\nOnly after this merge is completed, the new release can be done."}),"\n",(0,t.jsx)(n.h2,{id:"installing-or-upgrading-database",children:"Installing or Upgrading Database"}),"\n",(0,t.jsx)(n.p,{children:"The below maven command must be updated with the correct change log file and\nthen can be used to execute the upgrade scripts on the target database."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"mvn liquibase:update \\\n    -Dliquibase.properties.file=src/main/resources/liquibase/liquibase.mysql.properties \\\n    -Dliquibase.changeLogFile=src/main/resources/liquibase/full/mysql/xpanse-upgrade-v1.0.0-to-v1.0.1.mysql.xml\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"double check file names",type:"danger",children:(0,t.jsxs)(n.p,{children:["Most important parameter is the ",(0,t.jsx)(n.strong,{children:"changeLogFile"}),". This must be doubled checked before executing the command.\nIf we plan to execute multiple change log files, then the current sequence of change log files matter."]})}),"\n",(0,t.jsx)(n.h2,{id:"design-decisions",children:"Design Decisions"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Liquibase is available for many years and has better community support."}),"\n",(0,t.jsx)(n.li,{children:"XML change log used\u2014This is the oldest format in Liquibase and also the most stable one.\nFound some issues with SQL formatted change logs."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"known-issues",children:"Known Issues"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["If the ",(0,t.jsx)(n.strong,{children:"diff"})," generates a change in data type with the ",(0,t.jsx)(n.strong,{children:"modifyDataType"})," tag,\nthen all constraints on such a column are lost.\nWe must add the constraints back to the change log script. This is a MySQL only limitation."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},2585:(e,n,s)=>{s.d(n,{A:()=>t});s(6540);var a=s(4848);function t({name:e,url:n,isOpenInNewTab:s=!0}){return(0,a.jsx)("a",{href:n,className:"link-text",target:s?"_blank":"_self",children:e})}},9262:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/liquibase-generate-diff-between-releases.excalidraw-dbe725f0731fa5d342a597c909c0a954.png"},6740:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/liquibase-generate-full-release.excalidraw-45dc70cf2c7bb8f7e53125b5880ebd6b.png"},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var a=s(6540);const t={},i=a.createContext(t);function l(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);