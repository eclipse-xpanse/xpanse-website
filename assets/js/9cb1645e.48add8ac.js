"use strict";(self.webpackChunkosc_website=self.webpackChunkosc_website||[]).push([[203],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=i.createContext({}),u=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return i.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(t),d=a,k=p["".concat(s,".").concat(d)]||p[d]||m[d]||r;return t?i.createElement(k,l(l({ref:n},c),{},{components:t})):i.createElement(k,l({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=p;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<r;u++)l[u]=t[u];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},601:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var i=t(7462),a=(t(7294),t(3905));const r={sidebar_position:2},l="Configuration Language",o={unversionedId:"ocl",id:"ocl",title:"Configuration Language",description:"The Open Services Cloud Configuration Language allows you to describe your service and interaction with fundamentals services (computing, network, billing, ...).",source:"@site/docs/ocl.md",sourceDirName:".",slug:"/ocl",permalink:"/osc/docs/ocl",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/osc/docs/intro"},next:{title:"Supported Cloud",permalink:"/osc/docs/supported-cloud"}},s={},u=[{value:"Metadata",id:"metadata",level:2},{value:"Services Integration",id:"services-integration",level:2},{value:"Billing",id:"billing",level:3},{value:"Compute",id:"compute",level:3},{value:"VM",id:"vm",level:4},{value:"Network",id:"network",level:3},{value:"VPC",id:"vpc",level:4},{value:"Subnet",id:"subnet",level:4},{value:"Security",id:"security",level:4},{value:"Storage",id:"storage",level:3},{value:"Administration Console",id:"administration-console",level:3},{value:"Observability &amp; Tracing",id:"observability--tracing",level:3},{value:"Logging",id:"logging",level:4},{value:"Tracing",id:"tracing",level:4},{value:"Metrics (Gauge, ...)",id:"metrics-gauge-",level:4},{value:"Identity Management",id:"identity-management",level:3},{value:"Baseline",id:"baseline",level:3},{value:"Example",id:"example",level:2},{value:"Terraform Provider",id:"terraform-provider",level:2}],c={toc:u};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configuration-language"},"Configuration Language"),(0,a.kt)("p",null,"The Open Services Cloud Configuration Language allows you to describe your service and interaction with fundamentals services (computing, network, billing, ...)."),(0,a.kt)("h2",{id:"metadata"},"Metadata"),(0,a.kt)("p",null,"The first part of the OCL service descriptor is basically service metadata:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," is the name of your service, used to identify the service in the CSP catalog, user console, etc"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"category")," is the overall category of the service. It's especially use to integrate the service in the right menu of the user console."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"namespace")," is the location of the service. It could be in a CSP subdomain, in a region, and any kind of CSP classification.")),(0,a.kt)("h2",{id:"services-integration"},"Services Integration"),(0,a.kt)("h3",{id:"billing"},"Billing"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"billing")," component defines the integration into cloud provider billing system."),(0,a.kt)("p",null,"You can configure the business model associated to the service:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"model")," defines the business model (",(0,a.kt)("inlineCode",{parentName:"li"},"flat"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"exponential"),", ...)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"period")," defines the rental period (",(0,a.kt)("inlineCode",{parentName:"li"},"daily"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"weekly"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"monthly"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"yearly"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"currency")," defines the billing currency (",(0,a.kt)("inlineCode",{parentName:"li"},"euro"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"usd"),", ...)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fixedPrice")," is the fixed price during the period (the price applied one shot whatever is the service use)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"variablePrice")," is the price depending of item volume"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"variableItem")," is the item used to calculate the variable price on the period (for instance, the number of instances, the number of transactions, ...)")),(0,a.kt)("h3",{id:"compute"},"Compute"),(0,a.kt)("h4",{id:"vm"},"VM"),(0,a.kt)("p",null,"This is the list of VMs used by the service. Each VM has:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," is the name of the VM"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"type")," is the VM type, like ",(0,a.kt)("inlineCode",{parentName:"li"},"t2.large")," for example"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"platform")," is the VM image/platform, like ",(0,a.kt)("inlineCode",{parentName:"li"},"linux-x64")," (to be generic)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"vpc")," is the name of the VPC defined in the ",(0,a.kt)("inlineCode",{parentName:"li"},"network")," section"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"subnet")," is the name of the Subnet defined in the ",(0,a.kt)("inlineCode",{parentName:"li"},"network")," section"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"security")," is the name of the security defined in the ",(0,a.kt)("inlineCode",{parentName:"li"},"network")," section"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"storage")," is the name of the storage defined in the ",(0,a.kt)("inlineCode",{parentName:"li"},"storage")," section"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"publicly")," is a flag to indicate if the VM should be exposed on Internet (",(0,a.kt)("inlineCode",{parentName:"li"},"true"),") or only local (",(0,a.kt)("inlineCode",{parentName:"li"},"false"),")")),(0,a.kt)("h3",{id:"network"},"Network"),(0,a.kt)("h4",{id:"vpc"},"VPC"),(0,a.kt)("p",null,"This is the list of VPC defined in the service network. Each VPC has:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," is the name of VPC, used in other OCL elements"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cidrs")," is a the VPN IP address range"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"routes")," is the routing policy for this VPC"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"acl")," defines the Access Control List for this VPC")),(0,a.kt)("h4",{id:"subnet"},"Subnet"),(0,a.kt)("p",null,"This is the list of subnet defined in the service network. Each subnet has:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," is the name of the subnet, used in other OCL elements"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"vpc")," is the name of the VPC where the subnet is attached"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"table")," is the subnet table"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"routes")," is the routing policy for this subnet")),(0,a.kt)("h4",{id:"security"},"Security"),(0,a.kt)("p",null,"This is the list of security (groups) defined in the service network. Each security has:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," is the name of the security, used in other OCL elements"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"inbound")," is the port mapping/forwarding inbound (using format like ",(0,a.kt)("inlineCode",{parentName:"li"},"22->22"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"outbound")," is the port mapping/forwarding outbound (using format like ",(0,a.kt)("inlineCode",{parentName:"li"},"22->22"),")")),(0,a.kt)("h3",{id:"storage"},"Storage"),(0,a.kt)("h3",{id:"administration-console"},"Administration Console"),(0,a.kt)("h3",{id:"observability--tracing"},"Observability & Tracing"),(0,a.kt)("h4",{id:"logging"},"Logging"),(0,a.kt)("h4",{id:"tracing"},"Tracing"),(0,a.kt)("h4",{id:"metrics-gauge-"},"Metrics (Gauge, ...)"),(0,a.kt)("h3",{id:"identity-management"},"Identity Management"),(0,a.kt)("h3",{id:"baseline"},"Baseline"),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "my-service",\n  "category": "compute",\n  "namespace": "my-namespace",\n  "billing": {\n    "model": "flat",\n    "period": "monthly",\n    "currency": "euro",\n    "fixedPrice": 20,\n    "variablePrice": 10,\n    "variableItem": "instance"\n  },\n  "compute": {\n    "vm": [{\n      "name": "my-vm",\n      "type": "t2.large",\n      "platform": "linux-x64",\n      "vpc": "my-vpc",\n      "subnet": "my-subnet",\n      "security": "my-sg",\n      "storage": "my-storage",\n      "publicly": true\n    }]\n  },\n  "network": {\n    "vpc": [{\n      "name": "my-vpc",\n      "cidrs": "172.31.0.0/16",\n      "routes": "",\n      "acl": ""\n    }],\n    "subnet": [{\n      "name": "my-subnet",\n      "vpc": "my-vpc",\n      "table": "",\n      "routes": ""\n    }],\n    "security": [{\n      "name": "my-sg",\n      "inbound": [ "22->22", "443->443", "80->80" ],\n      "outbound": []\n    }]\n  },\n  "storage": [{\n    "name": "my-storage",\n    "type": "ssd",\n    "size": "8GiB" \n  }]\n}\n')),(0,a.kt)("h2",{id:"terraform-provider"},"Terraform Provider"),(0,a.kt)("p",null,"OCL is also available as Terraform Provider, supporting the same details as above."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hcl"},'resource "osc_service" "myservice" {\n  name      = "my-service"\n  category  = "compute"\n  namespace = "my-namespace"\n\n  billing {\n    model         = "flat"\n    period        = "monthly"\n    currency      = "euro"\n    fixedPrice    = 20\n    variablePrice = 10\n    variableItem  = "instance"\n  }\n\n  compute {\n    vm {\n      name     = "my-vm"\n      type     = "t2.large"\n      platform = "linux-x64"\n      vpc      = "my-vpc"\n      subnet   = "my-subnet"\n      security = "my-sg"\n      storage  = "my-storage"\n      publicly = true\n    }\n  }\n\n  network {\n    vpc {\n      name   = "my-vpc"\n      cidrs  = "172.31.0.0/16"\n      routes = ""\n      acl    = ""\n    }\n\n    subnet {\n      name   = "my-subnet"\n      vpc    = "my-vpc"\n      table  = ""\n      routes = ""\n    }\n\n    security {\n      name     = "my-sg"\n      inbound  = ["22->22", "443->443", "80->80"]\n      outbound = []\n    }\n  }\n\n  storage {\n    name = "my-storage"\n    type = "ssd"\n    size = "8GiB"\n  }\n}\n')))}m.isMDXComponent=!0}}]);