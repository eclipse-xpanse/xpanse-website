"use strict";(self.webpackChunkosc_website=self.webpackChunkosc_website||[]).push([[203],{3905:(e,n,i)=>{i.d(n,{Zo:()=>u,kt:()=>k});var t=i(7294);function a(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function l(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){a(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function o(e,n){if(null==e)return{};var i,t,a=function(e,n){if(null==e)return{};var i,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||(a[i]=e[i]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var s=t.createContext({}),p=function(e){var n=t.useContext(s),i=n;return e&&(i="function"==typeof e?e(n):l(l({},n),e)),i},u=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var i=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(i),c=a,k=m["".concat(s,".").concat(c)]||m[c]||d[c]||r;return i?t.createElement(k,l(l({ref:n},u),{},{components:i})):t.createElement(k,l({ref:n},u))}));function k(e,n){var i=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=i.length,l=new Array(r);l[0]=c;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[m]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=i[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,i)}c.displayName="MDXCreateElement"},601:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var t=i(7462),a=(i(7294),i(3905));const r={sidebar_position:3},l="Configuration Language",o={unversionedId:"ocl",id:"ocl",title:"Configuration Language",description:"The Open Services Cloud Configuration Language allows you to describe your service and interaction with fundamentals services (computing, network, billing, ...).",source:"@site/docs/ocl.md",sourceDirName:".",slug:"/ocl",permalink:"/osc/docs/ocl",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/osc/docs/architecture"},next:{title:"Runtime",permalink:"/osc/docs/runtime"}},s={},p=[{value:"Image",id:"image",level:3},{value:"Provisioners",id:"provisioners",level:4},{value:"<code>image.base</code>",id:"imagebase",level:4},{value:"<code>image.base.filters</code>",id:"imagebasefilters",level:5},{value:"Artifacts",id:"artifacts",level:4},{value:"Billing",id:"billing",level:3},{value:"Compute",id:"compute",level:3},{value:"VM",id:"vm",level:4},{value:"Network",id:"network",level:3},{value:"VPC",id:"vpc",level:4},{value:"Subnet",id:"subnet",level:4},{value:"Security",id:"security",level:4},{value:"SecurityRule",id:"securityrule",level:5},{value:"Storage",id:"storage",level:3},{value:"Administration Console",id:"administration-console",level:3},{value:"Observability &amp; Tracing",id:"observability--tracing",level:3},{value:"Logging",id:"logging",level:4},{value:"Tracing",id:"tracing",level:4},{value:"Metrics (Gauge, ...)",id:"metrics-gauge-",level:4},{value:"Identity Management",id:"identity-management",level:3},{value:"Baseline",id:"baseline",level:3},{value:"Example",id:"example",level:2},{value:"Terraform Provider",id:"terraform-provider",level:2}],u={toc:p};function m(e){let{components:n,...i}=e;return(0,a.kt)("wrapper",(0,t.Z)({},u,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configuration-language"},"Configuration Language"),(0,a.kt)("p",null,"The Open Services Cloud Configuration Language allows you to describe your service and interaction with fundamentals services (computing, network, billing, ...)."),(0,a.kt)("p",null,"The first part of the OCL service descriptor is basically service metadata:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," is the name of the service, used to identify the service in the CSP catalog, user console, etc"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"category")," is the overall category of the service. It's especially use to integrate the service in the right menu of the user console."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"namespace")," is the location of the service. It could be in a CSP subdomain, in a region, and any kind of CSP classification.")),(0,a.kt)("h3",{id:"image"},"Image"),(0,a.kt)("h4",{id:"provisioners"},"Provisioners"),(0,a.kt)("p",null,"This is the list of provisioners used by the ",(0,a.kt)("inlineCode",{parentName:"p"},"image.artifacts"),". Each provisioner has:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - (Required) The name of the provisioner."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"type")," - (Required) The type of the provisioner. Possible values include: ",(0,a.kt)("inlineCode",{parentName:"li"},"shell"),"(more type will be coming)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"environments")," - (Required) The variables for provisioner."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"inline")," - (Required) The inline attributes for provisioner.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "my-kafka-release",\n  "type": "shell",\n  "environments": [\n    "WORK_HOME=/usr1/KAFKA/"\n  ],\n  "inline": [\n    "cd ${WORK_HOME} && wget http://xxxx/kafka/release.jar"\n  ]\n}\n')),(0,a.kt)("p",null,"This block defines a ",(0,a.kt)("inlineCode",{parentName:"p"},"shell")," provisioner which set an environment variable named ",(0,a.kt)("inlineCode",{parentName:"p"},"WORK_HOME")," in the shell execution environment and runs the commands in the ",(0,a.kt)("inlineCode",{parentName:"p"},"inline")," attribute."),(0,a.kt)("h4",{id:"imagebase"},(0,a.kt)("inlineCode",{parentName:"h4"},"image.base")),(0,a.kt)("p",null,"This is the list of base image used by the ",(0,a.kt)("inlineCode",{parentName:"p"},"image.artifacts"),". Each ",(0,a.kt)("inlineCode",{parentName:"p"},"image.base")," has:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - (Required) The name of the ",(0,a.kt)("inlineCode",{parentName:"li"},"image.base"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"type")," - (Required) The type(flavor) of vm, which the image will be used by."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"filters")," - (Required) The filters to lock the image.")),(0,a.kt)("h5",{id:"imagebasefilters"},(0,a.kt)("inlineCode",{parentName:"h5"},"image.base.filters")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - (Optional) The name to filter the image."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"id")," - (Optional) The identifier to lock the image.")),(0,a.kt)("h4",{id:"artifacts"},"Artifacts"),(0,a.kt)("p",null,"This is the list of artifact image. Each ",(0,a.kt)("inlineCode",{parentName:"p"},"image.base")," has:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - (Required) The name of the artifact image."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"base")," - (Required) The ",(0,a.kt)("inlineCode",{parentName:"li"},"JsonPath")," of the base images, which the artifact image will be based."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"provisioners")," - (Required) The ",(0,a.kt)("inlineCode",{parentName:"li"},"JsonPath")," list of the provisioners to build the artifact image.")),(0,a.kt)("h3",{id:"billing"},"Billing"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"billing")," component defines the integration into cloud provider billing system."),(0,a.kt)("p",null,"You can configure the business model associated to the service:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"model")," defines the business model (",(0,a.kt)("inlineCode",{parentName:"li"},"flat"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"exponential"),", ...)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"period")," defines the rental period (",(0,a.kt)("inlineCode",{parentName:"li"},"daily"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"weekly"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"monthly"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"yearly"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"currency")," defines the billing currency (",(0,a.kt)("inlineCode",{parentName:"li"},"euro"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"usd"),", ...)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fixedPrice")," is the fixed price during the period (the price applied one shot whatever is the service use)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"variablePrice")," is the price depending of item volume"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"variableItem")," is the item used to calculate the variable price on the period (for instance, the number of instances, the number of transactions, ...)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"backend")," is the software provider (managed service provider) billing backend system used for payback."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"properties")," is all properties related to billing, they are used by OSC for payback and bootstrapping.")),(0,a.kt)("h3",{id:"compute"},"Compute"),(0,a.kt)("h4",{id:"vm"},"VM"),(0,a.kt)("p",null,"This is the list of VMs used by the service. Each VM has:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - (Required) The name of the VM."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"type")," - (Required) The VM type, like ",(0,a.kt)("inlineCode",{parentName:"li"},"t2.large")," for example."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"subnet")," - (Required) A list of ",(0,a.kt)("inlineCode",{parentName:"li"},"JsonPath")," of the ",(0,a.kt)("inlineCode",{parentName:"li"},"subnet"),". The subnet for main Nic must be in the first place."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"security")," - (Required) A list of ",(0,a.kt)("inlineCode",{parentName:"li"},"JsonPath")," of ",(0,a.kt)("inlineCode",{parentName:"li"},"security"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"storage")," - (Required) A list of ",(0,a.kt)("inlineCode",{parentName:"li"},"JsonPath")," of the ",(0,a.kt)("inlineCode",{parentName:"li"},"storage"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"publicly")," - (Required) The flag to indicate if the VM should be exposed on Internet (",(0,a.kt)("inlineCode",{parentName:"li"},"true"),") or only local (",(0,a.kt)("inlineCode",{parentName:"li"},"false"),").")),(0,a.kt)("h3",{id:"network"},"Network"),(0,a.kt)("h4",{id:"vpc"},"VPC"),(0,a.kt)("p",null,"This is the list of VPC defined in the service network. Each VPC has:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - (Required) The name of VPC, used in other OCL elements"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cidr")," - (Required) The VPN IP address range.")),(0,a.kt)("h4",{id:"subnet"},"Subnet"),(0,a.kt)("p",null,"This is the list of subnet defined in the service network. Each subnet has:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - (Required) The name of the subnet, used in other OCL elements."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"vpc")," - (Required) The ",(0,a.kt)("inlineCode",{parentName:"li"},"JsonPath")," of the VPC where the subnet is attached."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cidr")," - (Required) The subnet IP address range.")),(0,a.kt)("h4",{id:"security"},"Security"),(0,a.kt)("p",null,"This is the list of security (groups) defined in the service network. Each security has:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - (Required) The name of the security, used in other OCL elements."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rules")," - (Required) The list of security rule.")),(0,a.kt)("h5",{id:"securityrule"},"SecurityRule"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - (Required) The name of the security rule, define in ",(0,a.kt)("inlineCode",{parentName:"li"},"security")," (groups)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"priority")," - (Required) The priority of the security rule. The lower the priority number, the higher the priority of the rule."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"protocol")," - (Required) Network protocol this rule applies to. Possible values include: ",(0,a.kt)("inlineCode",{parentName:"li"},"Tcp"),",",(0,a.kt)("inlineCode",{parentName:"li"},"Udp"),",",(0,a.kt)("inlineCode",{parentName:"li"},"Icmp"),",",(0,a.kt)("inlineCode",{parentName:"li"},"*"),"(which matches all)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cidr")," - (Required) The IP address range this rule applies to. The ",(0,a.kt)("inlineCode",{parentName:"li"},"*")," matches any IP."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"direction")," - (Required) The direction of the network traffic. Possible values include: ",(0,a.kt)("inlineCode",{parentName:"li"},"inbound"),",",(0,a.kt)("inlineCode",{parentName:"li"},"outbound"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ports")," - (Required) (Optional) Specifies the port value range, which supports single port (80), continuous port (1-30) and discontinuous port (22, 3389, 80) The valid port values is range form 1 to 65,535."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"action")," - (Required) Specifies whether network traffic is allowed or denied. Possible values include: ",(0,a.kt)("inlineCode",{parentName:"li"},"allow"),",",(0,a.kt)("inlineCode",{parentName:"li"},"deny"),".")),(0,a.kt)("h3",{id:"storage"},"Storage"),(0,a.kt)("h3",{id:"administration-console"},"Administration Console"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"console")," element described the integration with CSP admin console, with:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"backend")," is the admin console backend API URL"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"properties")," is key/value pairs used by OSC for the console integration")),(0,a.kt)("h3",{id:"observability--tracing"},"Observability & Tracing"),(0,a.kt)("h4",{id:"logging"},"Logging"),(0,a.kt)("h4",{id:"tracing"},"Tracing"),(0,a.kt)("h4",{id:"metrics-gauge-"},"Metrics (Gauge, ...)"),(0,a.kt)("h3",{id:"identity-management"},"Identity Management"),(0,a.kt)("h3",{id:"baseline"},"Baseline"),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "my-service",\n  "category": "compute",\n  "namespace": "my-namespace",\n  "properties": {\n    "meta": "data",\n    "other": true\n  },\n  "image": {\n    "provisioners": [\n      {\n        "name": "my-kafka-release",\n        "type": "shell",\n        "environment_vars": [\n          "WORK_HOME=/usr1/KAFKA/"\n        ],\n        "inline": [\n          "cd ${WORK_HOME} && wget http://xxxx/kafka/release.jar"\n        ]\n      }\n    ],\n    "base": [\n      {\n        "name": "ubuntu-x64",\n        "type": "t2.large",\n        "filters": {\n          "name": "ubuntu-for-osc-*"\n        }\n      },\n      {\n        "name": "centos-x64",\n        "type": "t2.large",\n        "filters": {\n          "id": "ed2c9ea6-7134-44b9-bbfa-109e0753766e"\n        }\n      }\n    ],\n    "artifacts": [\n      {\n        "name": "kafka_image",\n        "base": "$.image.base[0]",\n        "provisioners": ["$.image.provisioners[0]"]\n      }\n    ]\n  },\n  "billing": {\n    "model": "flat",\n    "period": "monthly",\n    "currency": "euro",\n    "fixedPrice": 20,\n    "variablePrice": 10,\n    "variableItem": "instance",\n    "backend": "https://software_provider/billing/backend",\n    "properties": {\n      "billing_prop": "value"\n    }\n  },\n  "compute": {\n    "vm": [\n      {\n        "name": "my-vm",\n        "type": "t2.large",\n        "image": "$.image.artifacts[0]",\n        "subnet": [\n          "$.network.subnet[0]"\n        ],\n        "security": [\n          "$.network.security[0]"\n        ],\n        "storage": [\n          "$.storage[0]"\n        ],\n        "publicly": true\n      }\n    ]\n  },\n  "network": {\n    "vpc": [\n      {\n        "name": "my-vpc",\n        "cidr": "172.31.0.0/16"\n      },\n      {\n        "name": "my-another-vpc",\n        "cidr": "172.32.0.0/16"\n      }\n    ],\n    "subnet": [\n      {\n        "name": "my-subnet",\n        "vpc": "$.network.vpc[0]",\n        "cidr": "172.31.1.0/24"\n      }\n    ],\n    "security": [\n      {\n        "name": "my-sg",\n        "rules": [\n          {\n            "name": "my-app-msg",\n            "priority": 1,\n            "protocol": "TCP",\n            "cidr": "172.31.2.0/24",\n            "direction": "inbound",\n            "ports": "3389",\n            "action": "allow"\n          }\n        ]\n      }\n    ]\n  },\n  "storage": [\n    {\n      "name": "my-storage",\n      "type": "ssd",\n      "size": "8GiB"\n    }\n  ],\n  "console": {\n    "backend": "https://...",\n    "properties": {\n      "one": "two"\n    }\n  }\n}\n')),(0,a.kt)("h2",{id:"terraform-provider"},"Terraform Provider"),(0,a.kt)("p",null,"OCL is also available as Terraform Provider, supporting the same details as above."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hcl"},'resource "osc_service" "myservice" {\n  name      = "my-service"\n  category  = "compute"\n  namespace = "my-namespace"\n  artifacts = ["mvn:groupId/artifactId/version", "https://host/path/to/artifact"]\n\n  billing {\n    model         = "flat"\n    period        = "monthly"\n    currency      = "euro"\n    fixedPrice    = 20\n    variablePrice = 10\n    variableItem  = "instance"\n  }\n\n  compute {\n    vm {\n      name     = "my-vm"\n      type     = "t2.large"\n      platform = "linux-x64"\n      vpc      = "my-vpc"\n      subnet   = "my-subnet"\n      security = "my-sg"\n      storage  = "my-storage"\n      publicly = true\n    }\n  }\n\n  network {\n    vpc {\n      name   = "my-vpc"\n      cidrs  = "172.31.0.0/16"\n      routes = ""\n      acl    = ""\n    }\n\n    subnet {\n      name   = "my-subnet"\n      vpc    = "my-vpc"\n      table  = ""\n      routes = ""\n    }\n\n    security {\n      name     = "my-sg"\n      inbound  = ["22->22", "443->443", "80->80"]\n      outbound = []\n    }\n  }\n\n  storage {\n    name = "my-storage"\n    type = "ssd"\n    size = "8GiB"\n  }\n}\n')))}m.isMDXComponent=!0}}]);