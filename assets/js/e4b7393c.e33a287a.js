"use strict";(self.webpackChunkxpanse_website=self.webpackChunkxpanse_website||[]).push([[5304],{9797:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var s=t(5893),i=t(1151),r=t(6367);const o={},a="Continuous Integration",p={id:"Contribute/continuous-integration",title:"Continuous Integration",description:"xpanse project uses GitHub actions for building and testing changes before they're merged.",source:"@site/docs/Contribute/continuous-integration.mdx",sourceDirName:"Contribute",slug:"/Contribute/continuous-integration",permalink:"/xpanse/docs/Contribute/continuous-integration",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Calendar",permalink:"/xpanse/docs/Contribute/calendar"},next:{title:"Pull Requests",permalink:"/xpanse/docs/Contribute/pull-requests"}},l={},c=[{value:"xpanse Repository",id:"xpanse-repository",level:3},{value:"xpanse UI Repository",id:"xpanse-ui-repository",level:3},{value:"xpanse Website Repository",id:"xpanse-website-repository",level:3},{value:"Pull Requests and CI Pipelines",id:"pull-requests-and-ci-pipelines",level:2}];function u(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"continuous-integration",children:"Continuous Integration"})}),"\n",(0,s.jsx)(n.p,{children:"xpanse project uses GitHub actions for building and testing changes before they're merged.\nFor each repository, GitHub actions are documented in its respective code base."}),"\n",(0,s.jsx)(n.h3,{id:"xpanse-repository",children:"xpanse Repository"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(r.Z,{name:"xpanse repository",url:"https://github.com/eclipse-xpanse/xpanse"})," contains the main application for xpanse project and is written in Java."]}),"\n",(0,s.jsxs)(n.p,{children:["CI pipeline for this repository is defined ",(0,s.jsx)(r.Z,{name:"here",url:"https://github.com/eclipse-xpanse/xpanse/blob/main/.github/workflows/xpanse.yml"})," as GitHub actions.\nThis Job builds complete project, runs all tests and also checks for the code format."]}),"\n",(0,s.jsx)(n.h3,{id:"xpanse-ui-repository",children:"xpanse UI Repository"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(r.Z,{name:"xpanse UI repository",url:"https://github.com/eclipse-xpanse/xpanse-ui"})," contains the frontend application for xpanse project and is written in TypeScript and based on ReactJS library."]}),"\n",(0,s.jsxs)(n.p,{children:["CI pipeline for this repository is defined ",(0,s.jsx)(r.Z,{name:"here",url:"https://github.com/eclipse-xpanse/xpanse-ui/blob/main/.github/workflows/xpanse.yml"})," as GitHub actions.\nThis Job runs the ES linter and prettier formatter checks."]}),"\n",(0,s.jsx)(n.h3,{id:"xpanse-website-repository",children:"xpanse Website Repository"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(r.Z,{name:"xpanse website repository",url:"https://github.com/eclipse-xpanse/xpanse-website"})," contains the documentation for xpanse project and is written in TypeScript and based on Docusaurus library."]}),"\n",(0,s.jsxs)(n.p,{children:["CI pipeline for this repository is defined ",(0,s.jsx)(r.Z,{name:"here",url:"https://github.com/eclipse-xpanse/xpanse-website/blob/main/.github/workflows/xpanse.yml"})," as GitHub actions.\nThis Job runs the ES linter and prettier formatter checks."]}),"\n",(0,s.jsx)(n.h2,{id:"pull-requests-and-ci-pipelines",children:"Pull Requests and CI Pipelines"}),"\n",(0,s.jsx)(n.p,{children:"All PRs on the respective repositories can be merged only when the underlying CI pipeline is successful."})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},6367:(e,n,t)=>{t.d(n,{Z:()=>i});t(7294);var s=t(5893);function i(e){let{name:n,url:t,isOpenInNewTab:i=!0}=e;return(0,s.jsx)("a",{href:t,className:"link-text",target:i?"_blank":"_self",children:n})}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var s=t(7294);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);