"use strict";(self.webpackChunkosc_website=self.webpackChunkosc_website||[]).push([[207],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=a,m=d["".concat(c,".").concat(h)]||d[h]||u[h]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7480:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:5},i="REST API",s={unversionedId:"api",id:"api",title:"REST API",description:"OSC Runtime includes a REST API allowing you to interact with the orchestrator.",source:"@site/docs/api.md",sourceDirName:".",slug:"/api",permalink:"/osc/docs/api",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Runtime",permalink:"/osc/docs/runtime"},next:{title:"Supported Cloud",permalink:"/osc/docs/supported-cloud"}},c={},l=[{value:"<code>/osc/health</code>",id:"oschealth",level:2},{value:"<code>/osc/register</code>",id:"oscregister",level:2},{value:"<code>/osc/register/fetch</code>",id:"oscregisterfetch",level:2},{value:"<code>/osc/services</code>",id:"oscservices",level:2},{value:"<code>/osc/start</code>",id:"oscstart",level:2},{value:"<code>/osc/stop</code>",id:"oscstop",level:2},{value:"<code>/osc/update</code>",id:"oscupdate",level:2},{value:"<code>/osc/update/fetch</code>",id:"oscupdatefetch",level:2}],p={toc:l};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rest-api"},"REST API"),(0,a.kt)("p",null,"OSC Runtime includes a REST API allowing you to interact with the orchestrator."),(0,a.kt)("p",null,"By default, the REST API is using ",(0,a.kt)("inlineCode",{parentName:"p"},"/osc")," as context path (it can be changed in the ",(0,a.kt)("inlineCode",{parentName:"p"},"rest.path")," runtime configuration)."),(0,a.kt)("h2",{id:"oschealth"},(0,a.kt)("inlineCode",{parentName:"h2"},"/osc/health")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"/osc/health")," endpoint is a very simple endpoint checking if the runtime is operating correctly."),(0,a.kt)("p",null,"It's a ",(0,a.kt)("inlineCode",{parentName:"p"},"GET")," operation, just returning ",(0,a.kt)("inlineCode",{parentName:"p"},"ready")," (raw text) if all is OK:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"curl -XGET http://host/osc/health\nready\n")),(0,a.kt)("h2",{id:"oscregister"},(0,a.kt)("inlineCode",{parentName:"h2"},"/osc/register")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"/osc/register")," endpoint allows you to register a service by providing a OCL json descriptor."),(0,a.kt)("p",null,"It's a ",(0,a.kt)("inlineCode",{parentName:"p"},"POST")," operation expecting ",(0,a.kt)("inlineCode",{parentName:"p"},"application/json")," as content type:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl -XPOST -H "Content-Type: application/json" -d @my-osl.json http://host/osc/register\n')),(0,a.kt)("h2",{id:"oscregisterfetch"},(0,a.kt)("inlineCode",{parentName:"h2"},"/osc/register/fetch")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"/osc/register/fetch")," endpoint allows you to provide the location of a OCL json descriptor (on HTTP URL for instance) as header."),(0,a.kt)("p",null,"The orchestrator will fetch the OCL json descriptor from the location and deploy the corresponding service."),(0,a.kt)("p",null,"It's a ",(0,a.kt)("inlineCode",{parentName:"p"},"POST")," operation, the OCL location is passed with the ",(0,a.kt)("inlineCode",{parentName:"p"},"ocl")," header:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl -XPOST -H "ocl: http://foo.bar/ocl.json" http://host/osc/register/fetch\n')),(0,a.kt)("h2",{id:"oscservices"},(0,a.kt)("inlineCode",{parentName:"h2"},"/osc/services")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"/osc/services")," endpoint lists all registered services."),(0,a.kt)("p",null,"It's a ",(0,a.kt)("inlineCode",{parentName:"p"},"GET")," operation:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"curl -XGET http://host/osc/services\nmy-service-1\nmy-service-2\n...\n")),(0,a.kt)("h2",{id:"oscstart"},(0,a.kt)("inlineCode",{parentName:"h2"},"/osc/start")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"/osc/start")," endpoint starts a registered service (you can list all services using ",(0,a.kt)("inlineCode",{parentName:"p"},"/osc/services")," endpoint)."),(0,a.kt)("p",null,"It's a ",(0,a.kt)("inlineCode",{parentName:"p"},"POST")," operation, the service is passed with the ",(0,a.kt)("inlineCode",{parentName:"p"},"managedServiceName")," header:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl -XPOST -H "managedServiceName: my-service" http://host/osc/start\n')),(0,a.kt)("h2",{id:"oscstop"},(0,a.kt)("inlineCode",{parentName:"h2"},"/osc/stop")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"/osc/stop")," endpoint stops a registered service."),(0,a.kt)("p",null,"It's a ",(0,a.kt)("inlineCode",{parentName:"p"},"POST")," operation, the service is passed with the ",(0,a.kt)("inlineCode",{parentName:"p"},"managedServiceName")," header:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl -XPOST -H "managedServiceName: my-service" http://host/osc/stop\n')),(0,a.kt)("h2",{id:"oscupdate"},(0,a.kt)("inlineCode",{parentName:"h2"},"/osc/update")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"/osc/update")," endpoint updates a registered service with a new OCL json descriptor."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"managedServiceName"),' header identifies the service to update, the "new" OCL json is passed directly on the stream:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl -XPOST -H "managedServiceName: my-service" -H "Content-Type: application/json" -d @my-new-ocl.json http://host/osc/update\n')),(0,a.kt)("h2",{id:"oscupdatefetch"},(0,a.kt)("inlineCode",{parentName:"h2"},"/osc/update/fetch")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"/osc/update/fetch")," endpoint updates a registered service with by fetching a new OCL json descriptor from a location."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"managedServiceName")," header identified the service to update, the ",(0,a.kt)("inlineCode",{parentName:"p"},"ocl")," header defines the new OCL json descriptor location:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl -XPOST -H "managedServiceName: my-service" -H "ocl: http://host/my-new-ocl.json" http://host/osc/update/fetch\n')))}d.isMDXComponent=!0}}]);