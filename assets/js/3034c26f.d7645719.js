"use strict";(self.webpackChunkxpanse_website=self.webpackChunkxpanse_website||[]).push([[8185],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},44456:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={sidebar_position:7},o="Runtime",l={unversionedId:"runtime",id:"runtime",title:"Runtime",description:"Xpanse runtime is the running module built on SpringBoot.",source:"@site/docs/runtime.md",sourceDirName:".",slug:"/runtime",permalink:"/xpanse/docs/runtime",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Database",permalink:"/xpanse/docs/database"},next:{title:"Plugins",permalink:"/xpanse/docs/plugins"}},s={},p=[{value:"Pre-Requisites",id:"pre-requisites",level:2},{value:"Properties and Environment Variables",id:"properties-and-environment-variables",level:2},{value:"Terraform CLI Installation",id:"terraform-cli-installation",level:3},{value:"Local Development",id:"local-development",level:3},{value:"Build",id:"build",level:4},{value:"Run",id:"run",level:4},{value:"From Command Line",id:"from-command-line",level:5},{value:"From IDE",id:"from-ide",level:5},{value:"Production",id:"production",level:3},{value:"Run using jar",id:"run-using-jar",level:4},{value:"Run using Docker image",id:"run-using-docker-image",level:4},{value:"Running API behind a proxy",id:"running-api-behind-a-proxy",level:4}],u={toc:p},c="wrapper";function d(e){let{components:t,...i}=e;return(0,a.kt)(c,(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"runtime"},"Runtime"),(0,a.kt)("p",null,"Xpanse runtime is the running module built on SpringBoot."),(0,a.kt)("h2",{id:"pre-requisites"},"Pre-Requisites"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"If running the runtime jar directly, then the host must have ",(0,a.kt)("inlineCode",{parentName:"li"},"Terraform CLI")," installed."),(0,a.kt)("li",{parentName:"ol"},"Fully configured Zitadel instance.")),(0,a.kt)("h2",{id:"properties-and-environment-variables"},"Properties and Environment Variables"),(0,a.kt)("p",null,"Xpanse has integration to multiple systems, and the aim is also to keep the system as flexible as possible and to cover\nall use-cases possible. Therefore, there are some configuration properties that the developer and the production\nadministrators must take care of before starting/deploying xpanse."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Configuration properties of authentication layer. Documented ",(0,a.kt)("a",{parentName:"li",href:"/xpanse/docs/authentication-authorization#runtime"},"here"),"."),(0,a.kt)("li",{parentName:"ol"},"Configuration properties of database layer. Documented ",(0,a.kt)("a",{parentName:"li",href:"/xpanse/docs/database#maria-db"},"here"),"."),(0,a.kt)("li",{parentName:"ol"},"Plugin activation variables. Documented ",(0,a.kt)("a",{parentName:"li",href:"/xpanse/docs/plugins#plugin-activation"},"here"),".")),(0,a.kt)("h3",{id:"terraform-cli-installation"},"Terraform CLI Installation"),(0,a.kt)("p",null,"Terraform CLI can be installed using the steps from\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://developer.hashicorp.com/terraform/downloads"},"official guide"),"."),(0,a.kt)("h3",{id:"local-development"},"Local Development"),(0,a.kt)("h4",{id:"build"},"Build"),(0,a.kt)("p",null,"As a requirement, we need Java Developer Kit (JDK) version 17 installed. You can use ",(0,a.kt)("a",{parentName:"p",href:"https://openjdk.org/"},"openjdk"),"\nor ",(0,a.kt)("a",{parentName:"p",href:"https://adoptium.net/"},"temurin")),(0,a.kt)("p",null,"Clone the project using the command below"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ git clone https://github.com/eclipse-xpanse/xpanse\n$ cd xpanse\n")),(0,a.kt)("p",null,"Then compile the entire project using the below command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ ./mvnw clean install -DskipTests\n")),(0,a.kt)("h4",{id:"run"},"Run"),(0,a.kt)("p",null,"Ensure all properties mentioned in the ",(0,a.kt)("a",{parentName:"p",href:"#properties-and-environment-variables"},"above section")," are correctly set."),(0,a.kt)("h5",{id:"from-command-line"},"From Command Line"),(0,a.kt)("p",null,"If you have a fully configured Zitadel instance running on your local system, then you can use the below command to\nstart the application by passing all variables."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:")," When using a local instance of Zitadel, it will use port 8080 and this cannot be changed.\nHence, the port of the runtime application must be changed from default 8080 to any other port using the ",(0,a.kt)("inlineCode",{parentName:"p"},"server.port"),"\nproperty.")),(0,a.kt)("p",null,"To start the application from the command line, run the below application from the root of the project."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ cd runtime/target\n$ java -jar xpanse-runtime-1.0.0-SNAPSHOT.jar --spring.profiles.active=zitadel --server.port=8081 \\\n--authorization-server-endpoint=${zitadel-endpoint} \\\n--authorization-api-client-id=${client-id} \\\n--authorization-api-client-secret=${client-secret} \\\n--authorization-swagger-ui-client-id=${swagger-ui-cleint-id}\n")),(0,a.kt)("p",null,"If you would like to use our ",(0,a.kt)("inlineCode",{parentName:"p"},"zitadel-testbed"),", then start the server using the below command.\nThis will automatically set properties required for connecting to our Zitadel test bed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ cd runtime/target\n$ java -jar xpanse-runtime-1.0.0-SNAPSHOT.jar --spring.profiles.active=zitadel,zitadel-testbed\n")),(0,a.kt)("h5",{id:"from-ide"},"From IDE"),(0,a.kt)("p",null,"Or the application can be started using the IDE by executing the main application directly.\nBelow is the example from IntellijIdea"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img.png",src:n(22658).Z,width:"1306",height:"852"})),(0,a.kt)("p",null,"You must see the below messages in the console."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'   _  __   ____    ____ _   ____    _____  ___\n  | |/_/  / __ \\  / __ `/  / __ \\  / ___/ / _ \\\n _>  <   / /_/ / / /_/ /  / / / / (__  ) /  __/\n/_/|_|  / .___/  \\__,_/  /_/ /_/ /____/  \\___/\n       /_/\n\n        xpanse 1.0.0-SNAPSHOT (2023)\n13:44:19.633 [main] INFO  o.e.xpanse.runtime.XpanseApplication - Starting XpanseApplication using Java 17.0.5 with PID 7344\n13:44:19.645 [main] INFO  o.e.xpanse.runtime.XpanseApplication - No active profile set, falling back to 1 default profile: "default"\n13:44:22.211 [main] INFO  o.e.x.o.FileOrchestratorStorage - No other storage beans found. Using default file storage.\n13:44:23.878 [main] WARN  o.e.x.o.OrchestratorService - No xpanse plugins loaded by the runtime.\n13:44:23.886 [main] INFO  o.e.xpanse.runtime.XpanseApplication - Started XpanseApplication in 5.029 seconds (process running for 5.992)\n')),(0,a.kt)("p",null,"You can check the status of the runtime by opening the swagger UI from any\nbrowser:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"http://localhost:8080/swagger-ui/index.html\n")),(0,a.kt)("h3",{id:"production"},"Production"),(0,a.kt)("p",null,"Ensure all properties mentioned in the ",(0,a.kt)("a",{parentName:"p",href:"#properties-and-environment-variables"},"above section")," are correctly set."),(0,a.kt)("h4",{id:"run-using-jar"},"Run using jar"),(0,a.kt)("p",null,"Download the released runtime jar from maven central repository.\nYou can list all available released versions ",(0,a.kt)("a",{parentName:"p",href:"https://oss.sonatype.org/#nexus-search;quick~xpanse-runtime"},"here"),"."),(0,a.kt)("p",null,"After downloading, follow the same steps mentioned in ",(0,a.kt)("a",{parentName:"p",href:"#from-command-line"},"this")," section."),(0,a.kt)("h4",{id:"run-using-docker-image"},"Run using Docker image"),(0,a.kt)("p",null,"You can start the runtime using our released docker image, and this is the preferred way.\nThis image contains all necessary tools preinstalled."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'$ docker pull ghcr.io/eclipse-xpanse/xpanse:${release-version}\n$ docker run -d -p 8080:8080 --name xpanse -e "SPRING_PROFILES_ACTIVE=zitadel,mariadb" ghcr.io/eclipse-xpanse/xpanse:${release-version}\n$ docker logs xpanse\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:")," It is safe to provide all properties as environment variables rather than passing them\ndirectly in the command line.\nIn case of this, the same property name must be set in UPPERCASE for all 4 variables."),(0,a.kt)("p",{parentName:"blockquote"},"For running, using docker image, we can use the ",(0,a.kt)("inlineCode",{parentName:"p"}," --env-file")," option of the ",(0,a.kt)("inlineCode",{parentName:"p"},"\ndocker run")," command to store all sensitive data.\nAgain here the property names must be in UPPERCASE.")),(0,a.kt)("h4",{id:"running-api-behind-a-proxy"},"Running API behind a proxy"),(0,a.kt)("p",null,"For running the runtime application behind a proxy, we must ensure that the proxy forwards the correct ",(0,a.kt)("inlineCode",{parentName:"p"},"X-Forwarded-*"),"\nheaders to the API.\nThis is necessary as the API has some features where the links to html pages are returned\nand this link will have the correct protocol and host only when these headers are set."),(0,a.kt)("p",null,"In the case of Nginx, the configuration will look like this"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-nginx",metastring:"configuration",configuration:!0},"proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_set_header X-Forwarded-Proto https;\nproxy_set_header Host $host;\n")))}d.isMDXComponent=!0},22658:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/ide-run-0c717d68ffba16b4dc8edfc9b9453d78.png"}}]);