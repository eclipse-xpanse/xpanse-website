"use strict";(self.webpackChunkxpanse_website=self.webpackChunkxpanse_website||[]).push([[1985],{2284:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"senstive-data","title":"Sensitive Data","description":"Sensitive data which is stored internally within our runtime memory or database is always encrypted with a secret key","source":"@site/docs/senstive-data.mdx","sourceDirName":".","slug":"/senstive-data","permalink":"/xpanse/docs/senstive-data","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Request Audit","permalink":"/xpanse/docs/request-audit"},"next":{"title":"Service Changes","permalink":"/xpanse/docs/service-changes"}}');var s=n(4848),r=n(8453),a=n(7346);const o={sidebar_position:8},c="Sensitive Data",l={},d=[{value:"Types of sensitive data handled",id:"types-of-sensitive-data-handled",level:2},{value:"Algorithm for encryption",id:"algorithm-for-encryption",level:2},{value:"Secret Key",id:"secret-key",level:2},{value:"Secret Key in file",id:"secret-key-in-file",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"sensitive-data",children:"Sensitive Data"})}),"\n",(0,s.jsx)(t.p,{children:"Sensitive data which is stored internally within our runtime memory or database is always encrypted with a secret key\nand with the strongest possible encryption algorithm."}),"\n",(0,s.jsx)(t.h2,{id:"types-of-sensitive-data-handled",children:"Types of sensitive data handled"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Sensitive data in the cloud provider credentials data."}),"\n",(0,s.jsx)(t.li,{children:"Sensitive data in the service deployment requests."}),"\n",(0,s.jsx)(t.li,{children:"Sensitive data in the service access parameters."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"algorithm-for-encryption",children:"Algorithm for encryption"}),"\n",(0,s.jsxs)(t.p,{children:["We can use any algorithm supported by Java as mentioned ",(0,s.jsx)(a.A,{name:"here",url:"https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html"}),".\nBy default, the supported algorithm is ",(0,s.jsx)(t.strong,{children:"AES"})," with ",(0,s.jsx)(t.strong,{children:"CBC"})," mode.\nThe default configuration can be overridden by updating the below three parameters."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"xpanse.secrets.encryption.algorithm.name=AES\nxpanse.secrets.encryption.algorithm.mode=CBC\nxpanse.secrets.encryption.algorithm.padding=ISO10126Padding\n"})}),"\n",(0,s.jsx)(t.h2,{id:"secret-key",children:"Secret Key"}),"\n",(0,s.jsx)(t.p,{children:"This is the most critical piece of the solution since this key is used to encrypt all secrets stored\nand hence can't be compromised."}),"\n",(0,s.jsx)(t.p,{children:"The below two properties must be used to provide the values of the secret key and initial vector"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:'xpanse.secrets.encryption.secrete.key.value=""\n\n# If the selected algorithm supports/needs initial vector, then provide this value as well.\nxpanse.secrets.encryption.initial.vector=""\n'})}),"\n",(0,s.jsxs)(t.admonition,{title:"generating random secure keys",type:"info",children:[(0,s.jsxs)(t.p,{children:["There are many ways do it and one of the easy and straightforward ways is to use the online tool - ",(0,s.jsx)(t.a,{href:"https://acte.ltd/utils/randomkeygen",children:"https://acte.ltd/utils/randomkeygen"}),"."]}),(0,s.jsx)(t.p,{children:"Here the 'Encryption key 256', must be used as the secret key and 'Basic 16' as the initial vector."})]}),"\n",(0,s.jsx)(t.h2,{id:"secret-key-in-file",children:"Secret Key in file"}),"\n",(0,s.jsxs)(t.p,{children:["The secret key can be provided either as a file or directly injected as a property.\nIf a secret key file is provided, then the key in the file gets the ",(0,s.jsx)(t.strong,{children:"priority"}),".\nApplication checks if the file is available in the provided path and if the file isn't empty.\nIf both aren't true, then it tries to get the secret key from the configuration parameter directly."]}),"\n",(0,s.jsx)(t.p,{children:"Location of the secret key can be provided by the below configuration parameter.\nThis must be a fully qualified path that's accessible to xpanse runtime."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:'xpanse.secrets.encryption.secrete.key.file=""\n'})}),"\n",(0,s.jsx)(t.admonition,{title:"a valid secret key is mandatory",type:"danger",children:(0,s.jsx)(t.p,{children:"If a valid secret key isn't found from both sources, then the application startup will fail."})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},7346:(e,t,n)=>{n.d(t,{A:()=>s});n(6540);var i=n(4848);function s(e){let{name:t,url:n,isOpenInNewTab:s=!0}=e;return(0,i.jsx)("a",{href:n,className:"link-text",target:s?"_blank":"_self",children:t})}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(6540);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);