"use strict";(self.webpackChunkxpanse_website=self.webpackChunkxpanse_website||[]).push([[4869],{3912:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"agent","title":"Agent","description":"is a Go based application that can","source":"@site/docs/agent.mdx","sourceDirName":".","slug":"/agent","permalink":"/xpanse/docs/agent","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/xpanse/docs/introduction"},"next":{"title":"API","permalink":"/xpanse/docs/api"}}');var i=t(4848),s=t(8453),o=t(2585);const r={sidebar_position:2},c="Agent",l={},p=[{value:"Agent as System Service",id:"agent-as-system-service",level:2},{value:"Supported Use cases",id:"supported-use-cases",level:2},{value:"Update Application configuration",id:"update-application-configuration",level:3},{value:"Private APIs",id:"private-apis",level:2}];function d(e){const n={admonition:"admonition",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"agent",children:"Agent"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(o.A,{name:"xpanse agent",url:"https://github.com/eclipse-xpanse/xpanse-agent"})," is a Go based application that can\nbe deployed on the service's compute resources to communicate with the xpanse controller."]}),"\n",(0,i.jsxs)(n.admonition,{title:"Pull Agent",type:"important",children:[(0,i.jsx)(n.p,{children:"xpanse Agent is implemented with a pull mechanism since the xpanse controller in both"}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(o.A,{name:"modes",url:"./modes"})," can't reach the compute nodes which is running on a completely different private\nnetwork."]})]}),"\n",(0,i.jsx)(n.p,{children:"The agent is planned to take over all activities that needs to be performed on the service application after the\nservice is created. Some examples include"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Update application configuration"}),"\n",(0,i.jsx)(n.li,{children:"Perform actions on the application - for example, create users on a database service."}),"\n",(0,i.jsx)(n.li,{children:"Perform backup of service data and configuration."}),"\n",(0,i.jsx)(n.li,{children:"and many more."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"xpanse high level architecture with agent",src:t(4355).A+"",width:"1504",height:"725"})}),"\n",(0,i.jsx)(n.h2,{id:"agent-as-system-service",children:"Agent as System Service"}),"\n",(0,i.jsx)(n.p,{children:"It's recommended to install the xpanse agent as a system service on the compute node so that the agent is always started."}),"\n",(0,i.jsxs)(n.p,{children:["Example of how to do it can be found ",(0,i.jsx)(o.A,{name:"here",url:"https://github.com/eclipse-xpanse/xpanse-agent/tree/main/scripts"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"supported-use-cases",children:"Supported Use cases"}),"\n",(0,i.jsx)(n.p,{children:"The following use cases are currently supported by the agent."}),"\n",(0,i.jsx)(n.h3,{id:"update-application-configuration",children:"Update Application configuration"}),"\n",(0,i.jsx)(n.p,{children:"The application configuration management is based on Ansible.\nAgent wraps the GIT and Ansible client to execute the whole process."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"configuration update using agent",src:t(3411).A+"",width:"1399",height:"518"})}),"\n",(0,i.jsxs)(n.admonition,{title:"Agent for containerized solutions",type:"tip",children:[(0,i.jsx)(n.p,{children:"The same agent can also be used for containerized solutions by deploying it in the same network where the other\ncontainers are reachable."}),(0,i.jsx)(n.p,{children:"In case of Kubernetes, it can be in the same POD as the application container."})]}),"\n",(0,i.jsx)(n.h2,{id:"private-apis",children:"Private APIs"}),"\n",(0,i.jsx)(n.p,{children:"The polling APIs in the xpanse are considered as private\nand shouldn't be reachable outside cloud provider's management area."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},2585:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var a=t(4848);function i({name:e,url:n,isOpenInNewTab:t=!0}){return(0,a.jsx)("a",{href:n,className:"link-text",target:t?"_blank":"_self",children:e})}},3411:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/xpanse-agent-config-update-workflow.excalidraw-5d1e12663264b385406bfef27372929e.png"},4355:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/xpanse-architecture-with-agent.excalidraw-c939a25377cceb6dfce76d204c8a24d1.png"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var a=t(6540);const i={},s=a.createContext(i);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);