"use strict";(self.webpackChunkxpanse_website=self.webpackChunkxpanse_website||[]).push([[9084],{7229:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"caching","title":"Caching","description":"Development Environments","source":"@site/docs/caching.mdx","sourceDirName":".","slug":"/caching","permalink":"/xpanse/docs/caching","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Cloud Provider Credentials","permalink":"/xpanse/docs/cloud-provider-credentials"},"next":{"title":"Database Schema Evolution","permalink":"/xpanse/docs/database-schema-evolution"}}');var s=i(4848),r=i(8453),t=i(2585);const o={sidebar_position:6},d="Caching",c={},l=[{value:"Development Environments",id:"development-environments",level:2},{value:"Production Environments",id:"production-environments",level:2},{value:"Redis Cache",id:"redis-cache",level:3},{value:"Versions Supported",id:"versions-supported",level:4},{value:"Default Configuration",id:"default-configuration",level:4},{value:"Overriding Default Configuration",id:"overriding-default-configuration",level:4},{value:"Redis as a Docker Container",id:"redis-as-a-docker-container",level:4},{value:"Starting new container",id:"starting-new-container",level:5},{value:"Cached Data",id:"cached-data",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"caching",children:"Caching"})}),"\n",(0,s.jsx)(n.h2,{id:"development-environments",children:"Development Environments"}),"\n",(0,s.jsxs)(n.p,{children:["For all development purposes, we use a local memory-based cache ",(0,s.jsx)(n.code,{children:"Caffeine Cache"})," which is automatically created during the server startup.\nAnd when the service stops, all data in the local cache will be automatically cleared."]}),"\n",(0,s.jsx)(n.admonition,{title:"Caffeine Cache is only for development environments",type:"danger",children:(0,s.jsx)(n.p,{children:"The Caffeine Cache is purely for development and test purposes only and must be avoided for production installation of xpanse."})}),"\n",(0,s.jsx)(n.h2,{id:"production-environments",children:"Production Environments"}),"\n",(0,s.jsxs)(n.p,{children:["For production environments, we use a distributed cache. The below distributed caches are at the moment fully supported.\nBy ",(0,s.jsx)(n.strong,{children:"support"}),", we mean configurations for the cache added and also all functionalities tested."]}),"\n",(0,s.jsx)(n.h3,{id:"redis-cache",children:"Redis Cache"}),"\n",(0,s.jsxs)(n.p,{children:["At the moment, this is the only distributed cache that's fully supported.\nTo use ",(0,s.jsx)(n.code,{children:"Redis"})," as the cache manager for xpanse, it must be activated by starting the application with profile ",(0,s.jsx)(n.code,{children:"redis"})," and\nby replacing the placeholders for redis ",(0,s.jsx)(n.code,{children:"host"}),", ",(0,s.jsx)(n.code,{children:"port"})," and ",(0,s.jsx)(n.code,{children:"password"})," as below."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"java -jar xpanse-runtime-*-SNAPSHOT.jar \\\n          -Dspring.profiles.active=redis \\\n          -Dspring.data.redis.host=${redis-host} \\\n          -Dspring.data.redis.port=${redis-port} \\\n          -Dspring.data.redis.password=${redis-password}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"versions-supported",children:"Versions Supported"}),"\n",(0,s.jsxs)(n.p,{children:["Current supported version of Redis is ",(0,s.jsx)(n.code,{children:"7.4.2"}),". This is the latest LTS release of Redis."]}),"\n",(0,s.jsx)(n.h4,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,s.jsx)(n.p,{children:"The default configuration parameters for redis profile can be found"}),"\n",(0,s.jsx)(t.A,{name:"here",url:"https://github.com/eclipse-xpanse/xpanse/blob/main/runtime/src/main/resources/application-redis.properties#L6~L9"}),"\n",(0,s.jsx)(n.p,{children:"."}),"\n",(0,s.jsx)(n.h4,{id:"overriding-default-configuration",children:"Overriding Default Configuration"}),"\n",(0,s.jsx)(n.p,{children:"We can override the above three default configurations by starting the application as below by replacing the placeholders\nwith actual values."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"java -jar xpanse-runtime-*-SNAPSHOT.jar \\\n          -Dspring.profiles.active=redis \\\n          -Dspring.data.redis.host=${replace-with-redis-host} \\\n          -Dspring.data.redis.port=${replace-with-redis-port} \\\n          -Dspring.data.redis.password=${replace-with-redis-password}\n\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"secrets better as environment variables",type:"danger",children:(0,s.jsx)(n.p,{children:"It's safe to provide the redis-related properties as environment variables rather than passing them\ndirectly in the command line.\nIn case of this,\nthe same property name must be set in UPPERCASE and underscore separated instead of dot for all variables."})}),"\n",(0,s.jsx)(n.admonition,{title:"network between xpanse and its redis",type:"info",children:(0,s.jsx)(n.p,{children:"Using this startup command, the redis can run on any machine that's reachable from the xpanse runtime application."})}),"\n",(0,s.jsx)(n.h4,{id:"redis-as-a-docker-container",children:"Redis as a Docker Container"}),"\n",(0,s.jsxs)(n.p,{children:["Redis offers official Docker images for running a database as a container.\nMore details can be found here on the official page of Redis\nwebsite ",(0,s.jsx)(t.A,{name:"here",url:"https://redis.io/docs/latest/operate/rs/installing-upgrading/quickstarts/docker-quickstart"})," and on\nDockerHub ",(0,s.jsx)(t.A,{name:"here",url:"https://hub.docker.com/_/redis/"}),"."]}),"\n",(0,s.jsx)(n.h5,{id:"starting-new-container",children:"Starting new container"}),"\n",(0,s.jsxs)(n.p,{children:["While starting the Redis docker container for the first time, we can configure ",(0,s.jsx)(n.code,{children:"redis-port"}),", and\n",(0,s.jsx)(n.code,{children:"redis-password"})," as below and the same can be used in starting the xpanse runtime using the command described"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(t.A,{name:"above",url:"./redis-cache#overriding-default-configuration",isOpenInNewTab:!1}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"docker pull redis:7.4.2\n"})}),"\n",(0,s.jsx)(n.p,{children:"By starting the container with the below command, the redis is started by automatically configuring the redis with\nxpanse redis port and password."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"docker run --name ${container-name} \\\n            -e REDIS_PASSWORD=${replace-with-redis-password}\n            -p <replace-with-redis-port>:6379 -d redis:7.4.2\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"Avoid secrets in command line",type:"tip",children:(0,s.jsxs)(n.p,{children:["To avoid passing database related properties in command line, we can use the ",(0,s.jsx)(n.code,{children:" --env-file"})," option of the ",(0,s.jsx)(n.code,{children:" docker run"})," command to store all sensitive data."]})}),"\n",(0,s.jsx)(n.h2,{id:"cached-data",children:"Cached Data"}),"\n",(0,s.jsxs)(n.p,{children:["The application will cache multiple types of data. Each type of data cache will be registered into a cache manager with a specific name and configuration.\nThere are two types of cache managers, one is for ",(0,s.jsx)(n.code,{children:"Caffeine Cache"})," and the other is for ",(0,s.jsx)(n.code,{children:"Redis Cache"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Cache manager for Caffeine defined in the class ",(0,s.jsx)(n.code,{children:"CaffeineCacheConfig"})]}),"\n",(0,s.jsx)(t.A,{name:"here",url:"https://github.com/eclipse-xpanse/xpanse/blob/main/modules/cache/src/main/java/org/eclipse/xpanse/modules/cache/CaffeineCacheConfig.java#L50~L60"}),"\n",(0,s.jsxs)(n.p,{children:["Cache manager for Redis defined in the class ",(0,s.jsx)(n.code,{children:"RedisCacheConfig"})]}),"\n",(0,s.jsx)(t.A,{name:"here",url:"https://github.com/eclipse-xpanse/xpanse/blob/main/modules/cache/src/main/java/org/eclipse/xpanse/modules/cache/RedisCacheConfig.java#L72~L86"}),"\n",(0,s.jsx)(n.p,{children:"In both cache managers, the following caches are created with the following names:"}),"\n",(0,s.jsx)(n.p,{children:"REGION_AZS_CACHE_NAME -- to cache different available zones of the regions in the service cloud providers.\nSERVICE_FLAVOR_PRICE_CACHE_NAME -- to cache different prices of the flavors of the service with different billing models in the service cloud providers.\nCREDENTIAL_CACHE_NAME -- to cache different credentials the service cloud providers provided by the users.\nMONITOR_METRICS_CACHE_NAME --to cache different monitor metrics of the deployed services.\nDEPLOYER_VERSIONS_CACHE_NAME --to cache available versions of the deployer tools, such as terraform, opentofu etc."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},2585:(e,n,i)=>{i.d(n,{A:()=>s});i(6540);var a=i(4848);function s({name:e,url:n,isOpenInNewTab:i=!0}){return(0,a.jsx)("a",{href:n,className:"link-text",target:i?"_blank":"_self",children:e})}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var a=i(6540);const s={},r=a.createContext(s);function t(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);