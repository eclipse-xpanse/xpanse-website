"use strict";(self.webpackChunkxpanse_website=self.webpackChunkxpanse_website||[]).push([[5165],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>v});var t=a(67294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=t.createContext({}),d=function(e){var n=t.useContext(o),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},c=function(e){var n=d(e.components);return t.createElement(o.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},h=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(a),h=i,v=p["".concat(o,".").concat(h)]||p[h]||u[h]||r;return a?t.createElement(v,l(l({ref:n},c),{},{components:a})):t.createElement(v,l({ref:n},c))}));function v(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=h;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s[p]="string"==typeof e?e:i,l[1]=s;for(var d=2;d<r;d++)l[d]=a[d];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}h.displayName="MDXCreateElement"},77227:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var t=a(87462),i=(a(67294),a(3905));const r={sidebar_position:5},l="Cloud Provider Credentials",s={unversionedId:"cloud-provider-credentials",id:"cloud-provider-credentials",title:"Cloud Provider Credentials",description:"Since Xpanse runtime integrates with multiple cloud APIs, there is a need to define how and which credentials are used",source:"@site/docs/cloud-provider-credentials.md",sourceDirName:".",slug:"/cloud-provider-credentials",permalink:"/xpanse/docs/cloud-provider-credentials",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Configuration Language",permalink:"/xpanse/docs/configuration-language"},next:{title:"Database",permalink:"/xpanse/docs/database"}},o={},d=[{value:"Authentication Capabilities",id:"authentication-capabilities",level:2},{value:"Credential Configuration",id:"credential-configuration",level:3},{value:"Credential Type - Variables",id:"credential-type---variables",level:3},{value:"Credential Variable Value Sources",id:"credential-variable-value-sources",level:4},{value:"Xpanse User Specific Credentials",id:"xpanse-user-specific-credentials",level:6},{value:"OS Environment Variables",id:"os-environment-variables",level:6},{value:"Credential Variables &quot;Joining&quot;",id:"credential-variables-joining",level:4},{value:"Service Deployment",id:"service-deployment",level:6},{value:"Service Monitoring",id:"service-monitoring",level:6},{value:"Credential Cache",id:"credential-cache",level:2},{value:"Cache Eviction",id:"cache-eviction",level:3},{value:"Data Encryption",id:"data-encryption",level:3},{value:"Multiple Credentials Found",id:"multiple-credentials-found",level:3}],c={toc:d},p="wrapper";function u(e){let{components:n,...a}=e;return(0,i.kt)(p,(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"cloud-provider-credentials"},"Cloud Provider Credentials"),(0,i.kt)("p",null,"Since Xpanse runtime integrates with multiple cloud APIs, there is a need to define how and which credentials are used\nby Xpanse for each of the cloud providers."),(0,i.kt)("h2",{id:"authentication-capabilities"},"Authentication Capabilities"),(0,i.kt)("p",null,"Each cloud provider allows different ways for its clients to authenticate itself and consume its API.\nFor example, the same CSP might support username/password, API key, Oauth2 etc., as possible ways to connect to its API."),(0,i.kt)("p",null,"While Xpanse plugins are responsible for integrating with the cloud provider APIs,\nit might not have implemented all possible ways to authenticate itself to the cloud provider API."),(0,i.kt)("p",null,"Every Xpanse Plugin will define the authentication methods it supports to connect to its underlying cloud provider.\nThis configuration is added and exposed by implementing\nthe ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-xpanse/xpanse/blob/main/modules/credential/src/main/java/org/eclipse/xpanse/modules/credential/AuthenticationCapabilities.java"},"AuthenticationCapabilities"),"\ninterface by the corresponding plugin."),(0,i.kt)("p",null,"The same information is also made available to consumers via the REST API\nmethod ",(0,i.kt)("a",{parentName:"p",href:"https://eclipse-xpanse.github.io/xpanse-website/docs/api/#tag/Credentials-Management/operation/getCredentialDefinitionsByCsp"},"getCredentialCapabilitiesByCsp"),"\nin the CredentialsApi, which returns all credential types defined and supported by the plugin."),(0,i.kt)("p",null,"This list is enhanced as and when Xpanse plugin for a specific CSP adds integration for new authentication methods\nsupported by the CSP APIs."),(0,i.kt)("h3",{id:"credential-configuration"},"Credential Configuration"),(0,i.kt)("p",null,"Each credential configuration defined by a plugin contains the following information"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Credential Type: variables, username/password, API key, Oauth2 etc."),(0,i.kt)("li",{parentName:"ol"},"Dependent configuration: In case of Variables, the variable names and its values that must be provided so that the\nplugin can connect to the respective cloud provider.")),(0,i.kt)("h3",{id:"credential-type---variables"},"Credential Type - Variables"),(0,i.kt)("p",null,"This is the only type that is currently implemented in Xpanse. This will be extended in the near future."),(0,i.kt)("h4",{id:"credential-variable-value-sources"},"Credential Variable Value Sources"),(0,i.kt)("p",null,"After a plugin has defined ",(0,i.kt)("inlineCode",{parentName:"p"},"credential Type")," as ",(0,i.kt)("inlineCode",{parentName:"p"},"variables")," and its respective variable names, then the consumer of this\ncloud provider, then values for these variable names must be provided, and this is possible to be done from different\nvariable sources."),(0,i.kt)("p",null,"This is necessary to allow all combinations where some credential variable values are fixed for an environment\nand some can be different for each user.\nFor example, in the case of Openstack plugin, the Identity URL might be fixed for each\nXpanse instance, but the username and password can vary for each Xpanse user."),(0,i.kt)("h6",{id:"xpanse-user-specific-credentials"},"Xpanse User Specific Credentials"),(0,i.kt)("p",null,"A credential for combination of a specific CSP, ",(0,i.kt)("inlineCode",{parentName:"p"},"CredentialType")," and a specific Xpanse user can be added using\nthe ",(0,i.kt)("a",{parentName:"p",href:"https://eclipse-xpanse.github.io/xpanse-website/docs/api/#tag/Credentials-Management/operation/addCredential"},"addCredential"),"\nAPI method.\nThis means for all services ordered by a Xpanse user or for monitoring services which are ordered by this\nspecific Xpanse user, this added credential will be used."),(0,i.kt)("p",null,"This exact request body definition for each of the CSP and Credential Types can be found\nusing ",(0,i.kt)("a",{parentName:"p",href:"https://eclipse-xpanse.github.io/xpanse-website/docs/api/#tag/Services-Available/operation/getCredentialOpenApi"},"getCredentialOpenApi"),".\nThis method provides a link to OpenAPI definition and sample request for adding credentials for each CSP."),(0,i.kt)("p",null,"Credential variable values sent from this API are stored directly into ",(0,i.kt)("a",{parentName:"p",href:"#credential-cache"},"CredentialCache")),(0,i.kt)("h6",{id:"os-environment-variables"},"OS Environment Variables"),(0,i.kt)("p",null,"Based on the ",(0,i.kt)("inlineCode",{parentName:"p"},"CredentialDefinition")," configured in the Plugins, the Xpanse runtime can be started by injecting default\ncredential configuration variables as OS environment variables to the runtime. If values for all credential variables\nare not available from other sources, then the runtime will search for credential variables from OS environment\nvariables."),(0,i.kt)("p",null,"Please note that the variables from OS environment values are read as-is. It is therefore necessary to keep credential\nvariable names unique even between two different credential types of the same CSP."),(0,i.kt)("h4",{id:"credential-variables-joining"},'Credential Variables "Joining"'),(0,i.kt)("p",null,"As described in the above sections, for each credential type, a certain set of variables are defined. Values for ",(0,i.kt)("strong",{parentName:"p"},"all"),"\nof these variables are needed for the credential to be valid."),(0,i.kt)("p",null,"We join credential variable values from all the sources\nmentioned in the ",(0,i.kt)("a",{parentName:"p",href:"#Credential-Variable-Value-Sources"},"above sections"),"\nto get the final credential variable values that will be used for connecting to the CSP."),(0,i.kt)("p",null,"Credential values are read from different values and ",(0,i.kt)("strong",{parentName:"p"},"joined")," into one single set of all required credential variable\nvalues of a given type."),(0,i.kt)("p",null,"If the value of a credential variable is available in multiple sources, then the value coming from the source of higher\npriority is used."),(0,i.kt)("h6",{id:"service-deployment"},"Service Deployment"),(0,i.kt)("p",null,"During the service deployment, all the values for the variables defined in the ",(0,i.kt)("inlineCode",{parentName:"p"},"CredentialDefinition")," is derived from\ndifferent sources in a priority sequence provided below"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"CredentialType and variables from deploy variables."),(0,i.kt)("p",{parentName:"li"},"As part of the registering services, the service provider can define what type of credentials is needed for ordering\nthe service.\nThe end user must add this credential using ",(0,i.kt)("inlineCode",{parentName:"p"},"addCredential")," method.\nThis will add credentials to CredentialsCache](#credential-cache).")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Credential variable values from OS environment variables."))),(0,i.kt)("mermaid",{value:"sequenceDiagram\n    Consumer --\x3e> API: Order Service\n    API --\x3e> CredentialsManager: Get Credentials\n    critical Calculate Credentials\n        CredentialsManager --\x3e> CredentialsCache: Get credential variable values from credentials cache\n        CredentialsManager --\x3e> OS: Get credential variable values from OS environment variables\n        CredentialsManager --\x3e> CredentialsManager: Combine credential variable values from all sources based on priorities for the source\n        CredentialsManager --\x3e> CredentialsManager: Validate if values for all variables in CredentialDefinition is available\n        CredentialsManager --\x3e> API: Returns credentials\n        break when complete credential definition is not found\n            CredentialsManager --\x3e> API: Throw error.\n            API --\x3e Consumer: Reject request.\n        end\n    end\n    API --\x3e> CSP: Request service deployment"}),(0,i.kt)("h6",{id:"service-monitoring"},"Service Monitoring"),(0,i.kt)("p",null,"During the service monitoring, all the values for the variables defined in the ",(0,i.kt)("inlineCode",{parentName:"p"},"CredentialDefinition")," is derived from\ndifferent sources in a priority sequence provided below"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Credentials available in the ",(0,i.kt)("a",{parentName:"li",href:"#credential-cache"},"CredentialsCache"),"."),(0,i.kt)("li",{parentName:"ol"},"credential variables from OS environment variables.")),(0,i.kt)("mermaid",{value:"sequenceDiagram\n    Consumer --\x3e> API: Get Service Metrics\n    API --\x3e> CredentialsManager: Get Credentials\n    critical Calculate Credentials\n        CredentialsManager --\x3e> CredentialsCache: Get credential variable values from credentials cache\n        CredentialsManager --\x3e> OS: Get credentials variable values from OS environment variables\n        CredentialsManager --\x3e> CredentialsManager: Combine credential variable values from all sources based on priorities\n        CredentialsManager --\x3e> CredentialsManager: Validate if values for all variables in CredentialDefinition is available\n        break Full credential configuration is not found\n            CredentialsManager --\x3e> API: Throw Error\n        end\n        CredentialsManager --\x3e> API: Credentials found and returned\n    end\n    API --\x3e> CSP: Get metrics from CSP using credentials\n    CSP --\x3e> API: Metrics data\n    API --\x3e> Consumer: Forward metrics data"}),(0,i.kt)("h2",{id:"credential-cache"},"Credential Cache"),(0,i.kt)("p",null,"Credential cache is the credential store in Xpanse runtime which stores all credential data which are required to be\nused in the later phase of the workflows.\nCredentials provided by the ",(0,i.kt)("a",{parentName:"p",href:"#xpanse-user-specific-credentials"},"API")," are stored as an in-memory cache map."),(0,i.kt)("h3",{id:"cache-eviction"},"Cache Eviction"),(0,i.kt)("p",null,"Credentials are evicted from cache after the provided expiry time or by default after 1 hour."),(0,i.kt)("h3",{id:"data-encryption"},"Data Encryption"),(0,i.kt)("p",null,"When the runtime is started with an AES secure key, then all sensitive data is encrypted and stored in the JVM.\nMore information can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eclipse-xpanse/xpanse#sensitive-parameters-handling"},"here"),"."),(0,i.kt)("h3",{id:"multiple-credentials-found"},"Multiple Credentials Found"),(0,i.kt)("p",null,"When multiple credentials are found in the credential cache for the same Xpanse user, credential type, and CSP, then we\nsimply use the first available credential."))}u.isMDXComponent=!0}}]);