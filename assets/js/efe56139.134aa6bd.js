"use strict";(self.webpackChunkxpanse_website=self.webpackChunkxpanse_website||[]).push([[9754],{7682:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var o=t(5893),n=t(1151);const s={sidebar_position:7},i="Modes",d={id:"modes",title:"Modes",description:"xpanse doesn't have an opinionated implementation. It aims to provide a framework which is flexible",source:"@site/docs/modes.mdx",sourceDirName:".",slug:"/modes",permalink:"/xpanse/docs/modes",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Developer Setup",permalink:"/xpanse/docs/developer-setup"},next:{title:"Observability",permalink:"/xpanse/docs/observability"}},a={},c=[{value:"Cloud Provider Integrated Mode",id:"cloud-provider-integrated-mode",level:3},{value:"App Store Mode",id:"app-store-mode",level:3},{value:"High-Level Sequence Diagram",id:"high-level-sequence-diagram",level:2}];function p(e){const r={h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",mermaid:"mermaid",p:"p",strong:"strong",...(0,n.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"modes",children:"Modes"})}),"\n",(0,o.jsx)(r.p,{children:"xpanse doesn't have an opinionated implementation. It aims to provide a framework which is flexible\nand has all building blocks necessary to use it in different contexts/modes."}),"\n",(0,o.jsxs)(r.p,{children:["Current possible modes of xpanse are ",(0,o.jsx)(r.strong,{children:"app store mode"})," and ",(0,o.jsx)(r.strong,{children:"cloud provider integration mode"}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"cloud-provider-integrated-mode",children:"Cloud Provider Integrated Mode"}),"\n",(0,o.jsx)(r.p,{children:"In this mode, xpanse is deployed on the management zone of the specific cloud provider that supports xpanse."}),"\n",(0,o.jsx)(r.p,{children:"With this mode, the services from software vendors are offered as fully native managed services on that\nspecific cloud provider. The end user won't notice if the service is from an independent software vendor or from\nthe cloud provider itself."}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.img,{alt:"cloud-provider-integrated-mode-architecture",src:t(3712).Z+"",width:"841",height:"461"})}),"\n",(0,o.jsx)(r.h3,{id:"app-store-mode",children:"App Store Mode"}),"\n",(0,o.jsx)(r.p,{children:"In this mode, xpanse is deployed outside any specific cloud provider's management layer.\nUsing this mode, the service vendors can use the xpanse platform to sell services on any cloud providers\nsupported by xpanse."}),"\n",(0,o.jsx)(r.p,{children:"The end user then uses this one stop-shop to consume services from the cloud provider of his choice."}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.img,{alt:"app-store-mode-architecture",src:t(6324).Z+"",width:"1162",height:"600"})}),"\n",(0,o.jsx)(r.h2,{id:"high-level-sequence-diagram",children:"High-Level Sequence Diagram"}),"\n",(0,o.jsx)(r.p,{children:"A very high level happy-case service offering and service ordering via xpanse will look like below."}),"\n",(0,o.jsx)("div",{style:{width:"130%"},children:(0,o.jsx)(r.mermaid,{value:"    sequenceDiagram\n    actor ISV\n    actor CSP\n    actor USER\n    critical register service\n        ISV --\x3e> xpanse API/UI: Register service template.\n        xpanse API/UI --\x3e> orchestrator: Register service template.\n        orchestrator --\x3e database: Store service template in database with APPROVAL_PENDING status.\n    end\n    critical validate service\n        CSP --\x3e> xpanse API/UI: Validate and approve service.\n        xpanse API/UI --\x3e> orchestrator: Validate and approve service.\n        orchestrator --\x3e> database: Update service template status to APPROVED.\n        orchestrator --\x3e plugin: Prepare service for customer to order.\n        plugin --\x3e> cloud provider: Configure service in necessary cloud management systems.\n    end\n    alt order service - app store mode\n        USER --\x3e> xpanse API/UI: Order service from the catalog.\n        xpanse API/UI --\x3e> orchestrator: forward order request.\n        orchestrator --\x3e> deployer: Request service deployment as configured in the service template\n        deployer --\x3e> cloud provider: Create resources and configure service.\n        deployer --\x3e> orchestrator: Return endpoint details to reach the deployed service.\n        deployer --\x3e> xpanse API/UI: Return endpoint details to reach the deployed service.\n        xpanse API/UI --\x3e> USER: Return endpoint details to customer.\n    else order service - cloud provider integrated mode\n        USER --\x3e> cloud provider: Order service from the catalog.\n        cloud provider --\x3e> orchestrator: Start deployment\n        orchestrator --\x3e> deployer: Request service deployment as configured in the service template\n        deployer --\x3e> cloud provider: Create resources and configure service.\n        deployer --\x3e> orchestrator: Return endpoint details to reach the deployed service.\n        orchestrator --\x3e> cloud provider: Return endpoint details to customer.\n        cloud provider --\x3e> USER: Return endpoint details to customer.\n    end"})})]})}function l(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},6324:(e,r,t)=>{t.d(r,{Z:()=>o});const o=t.p+"assets/images/app-store-mode-architecture.excalidraw-8e7f4893e5b3552784bdec076d27617d.png"},3712:(e,r,t)=>{t.d(r,{Z:()=>o});const o=t.p+"assets/images/cloud-provider-integrated-mode-architecture.excalidraw-fd65ab00f0727237cfca38c206f95f5a.png"},1151:(e,r,t)=>{t.d(r,{Z:()=>d,a:()=>i});var o=t(7294);const n={},s=o.createContext(n);function i(e){const r=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(s.Provider,{value:r},e.children)}}}]);