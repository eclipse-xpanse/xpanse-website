"use strict";(self.webpackChunkxpanse_website=self.webpackChunkxpanse_website||[]).push([[9671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},i="Introduction",l={unversionedId:"intro",id:"intro",title:"Introduction",description:"Let's discover Xpanse in less than 5 minutes.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/xpanse/docs/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Architecture",permalink:"/xpanse/docs/architecture"}},s={},u=[{value:"Getting Started",id:"getting-started",level:2},{value:"What you&#39;ll need",id:"what-youll-need",level:3},{value:"Running locally on VM",id:"running-locally-on-vm",level:4},{value:"Running on Docker, Kubernetes",id:"running-on-docker-kubernetes",level:4},{value:"Create service descriptor",id:"create-service-descriptor",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Let's discover ",(0,a.kt)("strong",{parentName:"p"},"Xpanse in less than 5 minutes"),"."),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Xpanse")," is composed by:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"an orchestrator responsible for the managed services (deployment, start, stop, ...) and loading\nplugins specific for each supported cloud provider"),(0,a.kt)("li",{parentName:"ul"},"Data model for describing managed services and for deploying these managed services."),(0,a.kt)("li",{parentName:"ul"},"a REST API to interact with the orchestrator"),(0,a.kt)("li",{parentName:"ul"},"runtime (eventually including cloud provider plugins) assembling all components together in a\nrunning service")),(0,a.kt)("p",null,"Let's get started by ",(0,a.kt)("strong",{parentName:"p"},"launching Xpanse runtime")," and ",(0,a.kt)("strong",{parentName:"p"},"deploying a simple managed service"),"."),(0,a.kt)("p",null,"You will create a simple service descriptor, and you will deploy to Xpanse using the\norchestrator REST API."),(0,a.kt)("h3",{id:"what-youll-need"},"What you'll need"),(0,a.kt)("p",null,"You need a Xpanse runtime:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"use the runtime provided by a cloud provider supporting Xpanse (the cloud provider\nalready have the runtime, and you can directly use the APIs)"),(0,a.kt)("li",{parentName:"ul"},"launch the runtime of your cloud infrastructure (on a VM or Kubernetes cluster for instance)"),(0,a.kt)("li",{parentName:"ul"},"launch the runtime on your machine or cloud infrastructure.")),(0,a.kt)("h4",{id:"running-locally-on-vm"},"Running locally on VM"),(0,a.kt)("p",null,"You must ",(0,a.kt)("a",{parentName:"p",href:"runtime"},"build your own runtime"),"."),(0,a.kt)("p",null,'In "exploded mode", you have a ',(0,a.kt)("inlineCode",{parentName:"p"},"runtime")," folder, where you can easily launch with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ java -jar xpanse-runtime-1.0-SNAPSHOT.jar\n")),(0,a.kt)("h4",{id:"running-on-docker-kubernetes"},"Running on Docker, Kubernetes"),(0,a.kt)("p",null,"The runtime is also available as Docker images. You can run a Docker container with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ docker run -d --name my-runtime -p 8080:8080 osc\n")),(0,a.kt)("p",null,"Take a look on ",(0,a.kt)("a",{parentName:"p",href:"runtime"},"runtime documentation")," for details."),(0,a.kt)("h2",{id:"create-service-descriptor"},"Create service descriptor"),(0,a.kt)("p",null,"A service is described with a ",(0,a.kt)("strong",{parentName:"p"},"yaml file"),". In this descriptor, you will define:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the service components"),(0,a.kt)("li",{parentName:"ul"},"the integration of the service with the fundamental services (computing, billing, ...)")),(0,a.kt)("p",null,"You can find examples of the service descriptors here ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/eclipse-xpanse/xpanse/tree/main/samples"},"Sample Service Descriptors")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\n## Deploy the service\n\nTo actually deploy the service, you have to submit the **yaml file** to the **Xpanse Orchestrator**.\n\nFor instance, you can deploy the service descriptor via REST:\n\n```bash\ncurl -XPOST -d @service.yaml -H "Content-Type: application/yaml" http://osc.host/path\n')))}d.isMDXComponent=!0}}]);