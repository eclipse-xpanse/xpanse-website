"use strict";(self.webpackChunkxpanse_website=self.webpackChunkxpanse_website||[]).push([[6995],{12:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>d,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"Roles/isv","title":"Independent Service Vendor","description":"Independent Service Vendor (ISV) is the role used by software vendors. ISVs sell their managed software services","source":"@site/docs/Roles/isv.mdx","sourceDirName":"Roles","slug":"/Roles/isv","permalink":"/xpanse/docs/Roles/isv","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Demo","permalink":"/xpanse/docs/FurtherReading/demos"},"next":{"title":"End User","permalink":"/xpanse/docs/Roles/end-user"}}');var r=n(4848),o=n(8453);const d={sidebar_position:1},i="Independent Service Vendor",c={},a=[{value:"Cloud provider integrated mode",id:"cloud-provider-integrated-mode",level:2},{value:"Access",id:"access",level:3},{value:"App store mode",id:"app-store-mode",level:2},{value:"Access",id:"access-1",level:3}];function p(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"independent-service-vendor",children:"Independent Service Vendor"})}),"\n",(0,r.jsx)(s.p,{children:"Independent Service Vendor (ISV) is the role used by software vendors. ISVs sell their managed software services\nusing xpanse."}),"\n",(0,r.jsx)(s.p,{children:"The supported use cases for ISV is the same irrespective of the mode in which xpanse is used.\nThe only expected difference for ISV between the xpanse modes is how the xpanse APIs are accessed."}),"\n",(0,r.jsx)(s.h2,{id:"cloud-provider-integrated-mode",children:"Cloud provider integrated mode"}),"\n",(0,r.jsxs)(s.p,{children:["In case of ",(0,r.jsx)(s.strong,{children:"cloud provider integrated"})," mode,\nISVs will use the cloud provider specific console and API end points to access the xpanse APIs to register their services."]}),"\n",(0,r.jsx)(s.h3,{id:"access",children:"Access"}),"\n",(0,r.jsx)(s.p,{children:"ISVs use the cloud provider's console and API using his/her IAM credentials to register their native managed services\nusing xpanse."}),"\n",(0,r.jsx)(s.h2,{id:"app-store-mode",children:"App store mode"}),"\n",(0,r.jsxs)(s.p,{children:["In case of ",(0,r.jsx)(s.strong,{children:"app store"})," mode, the xpanse uses the APIs hosted on the app store's management area\nto sell services on any cloud provider they wish and is supported by the app store"]}),"\n",(0,r.jsx)(s.h3,{id:"access-1",children:"Access"}),"\n",(0,r.jsxs)(s.p,{children:["Accessing the app store depends on the auth provider used by the app store.\nISV needs an account based on the app store setup and must have the ",(0,r.jsx)(s.code,{children:"isv"})," role associated with it."]}),"\n",(0,r.jsxs)(s.p,{children:["Additionally, if ISV wishes sell ",(0,r.jsx)(s.code,{children:"service-vendor"})," hosted service,\nthen the specific tenant credentials must be configured in the app store.\nThis depends on the kind of credentials supported by the respective cloud provider in it's xpanse plugin."]})]})}function l(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>i});var t=n(6540);const r={},o=t.createContext(r);function d(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);